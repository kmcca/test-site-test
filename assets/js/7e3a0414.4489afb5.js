"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[90273],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(r),y=a,m=d["".concat(s,".").concat(y)]||d[y]||u[y]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},21989:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={title:"Updating a Policy with the REST API",slug:"/r/t_update_policy"},o=void 0,p={unversionedId:"guides/apis/rest_apis/policy_rest_apis/policy_api_update",id:"guides/apis/rest_apis/policy_rest_apis/policy_api_update",title:"Updating a Policy with the REST API",description:"Use this command to update a policy:",source:"@site/docs/guides/15_apis/04_rest_apis/13_policy_rest_apis/02_policy_api_update.md",sourceDirName:"guides/15_apis/04_rest_apis/13_policy_rest_apis",slug:"/r/t_update_policy",permalink:"/km-docusaurus-test/r/t_update_policy",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Updating a Policy with the REST API",slug:"/r/t_update_policy"},sidebar:"tutorialSidebar",previous:{title:"Creating a Policy with the REST API",permalink:"/km-docusaurus-test/r/Creating_a_Policy_with_the_REST_API"},next:{title:"Deleting a Policy with the REST API",permalink:"/km-docusaurus-test/r/c_delete_policy"}},s={},c=[],l={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use this command to update a ",(0,a.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_appsec_policies"},"policy"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"http --auth-type=veracode_hmac PUT \u201chttps://api.veracode.com/appsec/v1/policies/{policyGuid}\u201d < input.json\n")),(0,a.kt)("p",null,"The API passes the JSON file that you populate with the necessary values as shown in this example payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "TestPolicy",\n  "type": "BLACKLIST",\n  "description": "Policy to test updating endpoint in end-to-end testing",\n  "vendor_policy": false,\n  "finding_rules": [\n    {\n      "type": "MAX_SEVERITY",\n      "scan_type": [\n        "DYNAMIC",\n        "MANUAL",\n        "STATIC"\n      ],\n      "value": "4"\n    }\n  ],\n  "scan_type": [\n    "SCA"\n  ],\n  "value": "14212"\n}\n')),(0,a.kt)("p",null,"The example payload specifies to update an ",(0,a.kt)("a",{parentName:"p",href:"/km-docusaurus-test/r/Creating_a_Policy_with_the_REST_API"},"existing policy")," with a new name and to change the ",(0,a.kt)("a",{parentName:"p",href:"../Review_Results/review_severity_exploitability.md"},"finding-severity rating")," of the ",(0,a.kt)("inlineCode",{parentName:"p"},"MAX_SEVERITY")," rule to ",(0,a.kt)("inlineCode",{parentName:"p"},"4"),". ",(0,a.kt)("a",{parentName:"p",href:"/km-docusaurus-test/r/Policy_API_Rules_Properties"},"Policy API Rules Properties")," describes each of the rule properties."))}u.isMDXComponent=!0}}]);