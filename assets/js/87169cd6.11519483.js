"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64899],{3905:(e,n,i)=>{i.d(n,{Zo:()=>c,kt:()=>f});var t=i(67294);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function s(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)i=a[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)i=a[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var p=t.createContext({}),o=function(e){var n=t.useContext(p),i=n;return e&&(i="function"==typeof e?e(n):s(s({},n),e)),i},c=function(e){var n=o(e.components);return t.createElement(p.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=o(i),f=r,m=u["".concat(p,".").concat(f)]||u[f]||_[f]||a;return i?t.createElement(m,s(s({ref:n},c),{},{components:i})):t.createElement(m,s({ref:n},c))}));function f(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=i.length,s=new Array(a);s[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var o=2;o<a;o++)s[o]=i[o];return t.createElement.apply(null,s)}return t.createElement.apply(null,i)}u.displayName="MDXCreateElement"},11804:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>_,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var t=i(87462),r=(i(67294),i(3905));const a={title:"Pipeline Scan Example for Using Maven with Jenkins",slug:"/r/Pipeline_Scan_Example_for_Using_Maven_with_Jenkins"},s=void 0,l={unversionedId:"guides/pipeline_scan/pipeline_scan_jenkins_examples/r_jenkins_maven",id:"guides/pipeline_scan/pipeline_scan_jenkins_examples/r_jenkins_maven",title:"Pipeline Scan Example for Using Maven with Jenkins",description:"This example Groovy code shows how to add a Pipeline Scan as a build stage in a Jenkins build pipeline that uses Maven.",source:"@site/docs/guides/08_pipeline_scan/09_pipeline_scan_jenkins_examples/02_r_jenkins_maven.md",sourceDirName:"guides/08_pipeline_scan/09_pipeline_scan_jenkins_examples",slug:"/r/Pipeline_Scan_Example_for_Using_Maven_with_Jenkins",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_Maven_with_Jenkins",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Pipeline Scan Example for Using Maven with Jenkins",slug:"/r/Pipeline_Scan_Example_for_Using_Maven_with_Jenkins"},sidebar:"tutorialSidebar",previous:{title:"Pipeline Scan Example for Using Gradle with Jenkins",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_Gradle_with_Jenkins"},next:{title:"Pipeline Scan Example for Using a Baseline File with Jenkins",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_a_Baseline_File_with_Jenkins"}},p={},o=[],c={toc:o};function _(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This example Groovy code shows how to add a Pipeline Scan as a build stage in a Jenkins build pipeline that uses Maven."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'\npipeline {\n  agent { label <\'any-with-jdk8-maven-curl-unzip\'> }\n  stages {\n    stage(\'Maven Build\') {\n      steps {\n        sh \'maven clean verify\'\n      }\n    }\n    stage(\'Veracode Pipeline Scan\') {\n      steps {\n        sh \'curl -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip\'\n        sh \'unzip pipeline-scan-LATEST.zip pipeline-scan.jar\'\n        sh \'java -jar pipeline-scan.jar \\\n          --veracode_api_id "${VERACODE_API_ID}" \\\n          --veracode_api_key "${VERACODE_API_SECRET}" \\\n          --file "build/libs/sample.jar" \\\n          --fail_on_severity="Very High, High" \\\n          --fail_on_cwe="80" \\\n          --baseline_file "${CI_BASELINE_PATH}" \\\n          --timeout "${CI_TIMEOUT}" \\\n          --project_name "${env.JOB_NAME}" \\\n          --project_url "${env.GIT_URL}" \\\n          --project_ref "${env.GIT_COMMIT}"\'\n      }\n    }\n  }\n  post {\n    always {\n      archiveArtifacts artifacts: \'results.json\', fingerprint: true\n    }\n  }\n}\n')))}_.isMDXComponent=!0}}]);