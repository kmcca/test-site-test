"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[69028],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var p=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);t&&(p=p.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,p)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,p,r=function(e,t){if(null==e)return{};var a,p,r={},n=Object.keys(e);for(p=0;p<n.length;p++)a=n[p],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(p=0;p<n.length;p++)a=n[p],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=p.createContext({}),l=function(e){var t=p.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return p.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return p.createElement(p.Fragment,{},t)}},d=p.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(a),m=r,h=d["".concat(o,".").concat(m)]||d[m]||u[m]||n;return a?p.createElement(h,i(i({ref:t},c),{},{components:a})):p.createElement(h,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<n;l++)i[l]=a[l];return p.createElement.apply(null,i)}return p.createElement.apply(null,a)}d.displayName="MDXCreateElement"},59096:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var p=a(87462),r=(a(67294),a(3905));const n={title:"getapplist.do",slug:"/r/r_getapplist"},i=void 0,s={unversionedId:"guides/apis/xml_apis/upload_xml_apis/getapplist_do",id:"guides/apis/xml_apis/upload_xml_apis/getapplist_do",title:"getapplist.do",description:"The getapplist.do call compiles a list of the applications in the portfolio. If you use the optional parameter to include user information, this call also returns details about tasks you have permissions to perform, such as view scan results and approve mitigations.",source:"@site/docs/guides/15_apis/05_xml_apis/02_upload_xml_apis/10_getapplist_do.md",sourceDirName:"guides/15_apis/05_xml_apis/02_upload_xml_apis",slug:"/r/r_getapplist",permalink:"/km-docusaurus-test/r/r_getapplist",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"getapplist.do",slug:"/r/r_getapplist"},sidebar:"tutorialSidebar",previous:{title:"getappinfo.do",permalink:"/km-docusaurus-test/r/r_getappinfo"},next:{title:"getbuildinfo.do",permalink:"/km-docusaurus-test/r/r_getbuildinfo"}},o={},l=[{value:"REST API Equivalent",id:"rest-api-equivalent",level:2},{value:"Resource URL",id:"resource-url",level:2},{value:"Parameters",id:"parameters",level:2},{value:"HTTPie Example",id:"httpie-example",level:2},{value:"HTTPie Results",id:"httpie-results",level:2},{value:"Java Example",id:"java-example",level:2},{value:"Java Results",id:"java-results",level:2}],c={toc:l};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,p.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"getapplist.do")," call compiles a list of the applications in the portfolio. If you use the optional parameter to include user information, this call also returns details about tasks you have permissions to perform, such as view scan results and approve mitigations."),(0,r.kt)("p",null,"Before using this API, Veracode strongly recommends that you read ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_API_usage_guidelines"},"API Usage and Access Guidelines"),". Ensure you access the APIs with the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/Region_Domains_for_Veracode_APIs"},"domain for your region"),"."),(0,r.kt)("h2",{id:"rest-api-equivalent"},"REST API Equivalent"),(0,r.kt)("p",null,"The REST API equivalent of this call is a ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"/appsec/v1/applications")," using the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/r_applications_list"},"Applications API"),". Veracode strongly recommends that you use the REST API for this action. For new integrations, always use the REST APIs."),(0,r.kt)("h2",{id:"resource-url"},"Resource URL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://analysiscenter.veracode.com/api/5.0/getapplist.do\n")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"include_user_info")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If true, the list of applications concludes with information about the user, account type, and the assigned permissions. Default is false.")))),(0,r.kt)("h2",{id:"httpie-example"},"HTTPie Example"),(0,r.kt)("p",null,"Examples use the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_httpie_tool"},"HTTPie command-line tool"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'http --auth-type=veracode_hmac "https://analysiscenter.veracode.com/api/5.0/getapplist.do" "include_user_info==true"\n')),(0,r.kt)("h2",{id:"httpie-results"},"HTTPie Results"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"getapplist.do")," call returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"applist")," XML document, which references the ",(0,r.kt)("a",{parentName:"p",href:"https://analysiscenter.veracode.com/resource/2.0/applist.xsd"},"applist.xsd")," schema file. You can use the XSD schema file to validate the XML data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n\n<applist xmlns:xsi="http&#x3a;&#x2f;&#x2f;www.w3.org&#x2f;2001&#x2f;XMLSchema-instance" \n      xmlns="https&#x3a;&#x2f;&#x2f;analysiscenter.veracode.com&#x2f;schema&#x2f;2.0&#x2f;applist" \n      xsi:schemaLocation="https&#x3a;&#x2f;&#x2f;analysiscenter.veracode.com&#x2f;schema&#x2f;2.0&#x2f;applist \n      https&#x3a;&#x2f;&#x2f;analysiscenter.veracode.com&#x2f;resource&#x2f;2.0&#x2f;applist.xsd" applist_version="1.2" \n      account_id="<account id>">\n   <app app_id="<app id>" app_name="<app name>" policy_updated_date="2019-08-13T14&#x3a;09&#x3a;11-04&#x3a;00"/>\n   <app app_id="<app id>" app_name="<app name>" policy_updated_date="2019-07-13T14&#x3a;03&#x3a;33-04&#x3a;00"/>\n   <app app_id="<app id>" app_name="<app name>" policy_updated_date="2019-08-16T14&#x3a;03&#x3a;33-11&#x3a;00"/>\n   <app app_id="<app id>" app_name="<app name>" policy_updated_date="2019-09-03T14&#x3a;03&#x3a;33-07&#x3a;00"/>\n   <user login_account_type="user" username="<VeracodeUsername>" create_application_profile="true" create_sandbox="true" \n      create_new_build="true" create_policy_scan="true" create_sandbox_scan="true" assign_app_to_team="true" \n      assign_app_to_any_team="true" view_sandbox="true" view_results="true" approve_mitigations="true" \n      submit_static_scan="true" submit_policy_static_scan="true" submit_sandbox_static_scan="true"/>\n</applist>\n')),(0,r.kt)("h2",{id:"java-example"},"Java Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"java -jar vosp-api-wrappers-java-<version #>.jar -vid <VeracodeApiId> -vkey <VeracodeApiKey> -action getapplist\n")),(0,r.kt)("h2",{id:"java-results"},"Java Results"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"getapplist.do")," call returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"applist")," XML document, which references the ",(0,r.kt)("a",{parentName:"p",href:"https://analysiscenter.veracode.com/resource/2.0/applist.xsd"},"applist.xsd")," schema file. You can use the XSD schema file to validate the XML data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<applist xmlns="https://analysiscenter.veracode.com/schema/2.0/applist"\n      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" account_id="12345" \n      applist_version="1.2" xsi:schemaLocation="https://analysiscenter.veracode.com/schema/2.0/applist \n      https://analysiscenter.veracode.com/resource/2.0/applist.xsd">\n   <app app_id="<app id>" app_name="<app name>" policy_updated_date="2017-11-16T13:55:05-05:00"/>\n   <app app_id="<app id>" app_name="<app name>" policy_updated_date="2018-08-17T02:24:25-04:00"/>\n   <app app_id="<app id>" app_name="<app name>"/>\n</applist>\n')))}u.isMDXComponent=!0}}]);