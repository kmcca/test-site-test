"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[41980],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>x});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(a),x=r,u=m["".concat(s,".").concat(x)]||m[x]||p[x]||i;return a?n.createElement(u,o(o({ref:t},c),{},{components:a})):n.createElement(u,o({ref:t},c))}));function x(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},97471:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const i={title:"Dynamic XML API",slug:"/r/r_getdynamicflaws"},o=void 0,l={unversionedId:"guides/apis/xml_apis/dynamic_xml_apis/README",id:"guides/apis/xml_apis/dynamic_xml_apis/README",title:"Dynamic XML API",description:"The getdynamicflaws.do call returns information on a specific flaw from a Dynamic Analysis.",source:"@site/docs/guides/15_apis/05_xml_apis/06_dynamic_xml_apis/README.md",sourceDirName:"guides/15_apis/05_xml_apis/06_dynamic_xml_apis",slug:"/r/r_getdynamicflaws",permalink:"/km-docusaurus-test/r/r_getdynamicflaws",draft:!1,tags:[],version:"current",frontMatter:{title:"Dynamic XML API",slug:"/r/r_getdynamicflaws"},sidebar:"tutorialSidebar",previous:{title:"XML API Tutorial: How to Use the Mitigation Calls",permalink:"/km-docusaurus-test/r/c_TUTOR_mitigate"},next:{title:"Flaw Report XML API",permalink:"/km-docusaurus-test/r/c_about_flawreport"}},s={},d=[{value:"REST API Equivalent",id:"rest-api-equivalent",level:2},{value:"Resource URL",id:"resource-url",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Parameters",id:"parameters",level:2},{value:"HTTPie Example",id:"httpie-example",level:2},{value:"HTTPie Results",id:"httpie-results",level:2}],c={toc:d};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"getdynamicflaws.do")," call returns information on a specific flaw from a Dynamic Analysis."),(0,r.kt)("p",null,"Before using this API, Veracode strongly recommends that you read ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_API_usage_guidelines"},"API Usage and Access Guidelines"),". Ensure you access the APIs with the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/Region_Domains_for_Veracode_APIs"},"domain for your region"),"."),(0,r.kt)("h2",{id:"rest-api-equivalent"},"REST API Equivalent"),(0,r.kt)("p",null,"The REST API equivalent of this call is ",(0,r.kt)("inlineCode",{parentName:"p"},"GET /appsec/v2/applications/<guid>/findings/<id>/dynamic_flaw_info"),". Veracode strongly recommends that you use the REST API for this action. For new integrations, always use the REST APIs."),(0,r.kt)("h2",{id:"resource-url"},"Resource URL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://analysiscenter.veracode.com/api/5.0/getdynamicflaws.do\n")),(0,r.kt)("h2",{id:"permissions"},"Permissions"),(0,r.kt)("p",null,"You need the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_API_roles_details"},"Results API role")," to use this call."),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"build_id"),(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Required")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Application or sandbox build ID.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"flaw_id"),(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Required")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Find flaw IDs on the ",(0,r.kt)("a",{parentName:"td",href:"https://docs.veracode.com/r/improve_mitigation"},"Triage Flaws page")," in the Veracode Platform or in the ",(0,r.kt)("inlineCode",{parentName:"td"},"issueid")," fields returned by the ",(0,r.kt)("a",{parentName:"td",href:"/km-docusaurus-test/r/r_detailedreport"},"Detailed Report API"),".")))),(0,r.kt)("p",null,"To locate the parameters for ",(0,r.kt)("inlineCode",{parentName:"p"},"getdynamicflaws.do"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"getapplist.do")," to locate the ",(0,r.kt)("inlineCode",{parentName:"li"},"app_id")," for your application."),(0,r.kt)("li",{parentName:"ol"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"getbuildlist.do")," with the ",(0,r.kt)("inlineCode",{parentName:"li"},"app_id")," to locate the current ",(0,r.kt)("inlineCode",{parentName:"li"},"build_id")," for your application."),(0,r.kt)("li",{parentName:"ol"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"detailedreport.do")," with the ",(0,r.kt)("inlineCode",{parentName:"li"},"build_id")," to locate a ",(0,r.kt)("inlineCode",{parentName:"li"},"flaw_id"),"."),(0,r.kt)("li",{parentName:"ol"},"In the XML code of the detailed report, find the report section for the target flaw and then find the ",(0,r.kt)("inlineCode",{parentName:"li"},"issueid")," element in that section. The ",(0,r.kt)("inlineCode",{parentName:"li"},"issueid")," is the ",(0,r.kt)("inlineCode",{parentName:"li"},"flaw_id"),".")),(0,r.kt)("h2",{id:"httpie-example"},"HTTPie Example"),(0,r.kt)("p",null,"Examples use the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_httpie_tool"},"HTTPie command-line tool"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'http --auth-type=veracode_hmac "https://analysiscenter.veracode.com/api/5.0/getdynamicflaws.do" "build_id==<build id>" "flaw_id==2"\n')),(0,r.kt)("h2",{id:"httpie-results"},"HTTPie Results"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"getdynamicflaws.do")," call returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"dynamicfinding")," XML document, which references the ",(0,r.kt)("a",{parentName:"p",href:"https://analysiscenter.veracode.com/resource/4.0/dynamicfinding.xsd"},"dynamicfinding.xsd")," schema file. You can use the XSD schema file to validate the XML data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n\n<dynamicfinding xmlns:xsi="http&#x3a;&#x2f;&#x2f;www.w3.org&#x2f;2001&#x2f;XMLSchema-instance" \n         xmlns="https&#x3a;&#x2f;&#x2f;analysiscenter.veracode.com&#x2f;schema&#x2f;4.0&#x2f;dynamicfinding" \n         xsi:schemaLocation="https&#x3a;&#x2f;&#x2f;analysiscenter.veracode.com&#x2f;schema&#x2f;4.0&#x2f;dynamicfinding \n         https&#x3a;&#x2f;&#x2f;analysiscenter.veracode.com&#x2f;resource&#x2f;4.0&#x2f;dynamicscaninfo.xsd" \n         app_id="<app id>" build_id="<build id>" flaw_id="2" engine_version="" cwe_id="402" \n         description="The security cookie does not have the &#x22;HttpOnly&#x22; attribute set. Using this attribute helps \n            to prevent client-side Javascript from accessing the cookie, thereby mitigating one of the most common XSS exploit \n            scenarios.&#xa;" remediation="Unless the application requires that cookies be accessible to Javascript code, set \n            the &#x22;HttpOnly&#x22; attribute when generating cookies.&#xa;" \n         parameter_type="" \n         parameter_name="" \n         parameter="Set-Cookie security HTTP response header" \n         original_arg="" \n         raw_response="HTTP&#x2f;1.1 302 Found&#xd;&#xa;Date&#x3a; Tue, 01 Oct 2019 20&#x3a;46&#x3a;15 GMT&#xd;&#xa;Server&#x3a; \n             Apache&#xd;&#xa;Set-Cookie&#x3a; PHPSESSID&#x3d;3696on897sncfp18jb800jnvfl&#x3b; path&#x3d;&#x2f;&#xd;&#xa;Expires&#x3a; \n             Thu, 19 Nov 1981 08&#x3a;52&#x3a;00 GMT&#xd;&#xa;Cache-Control&#x3a; no-store, no-cache, must-revalidate&#xd;&#xa;Pragma&#x3a; \n             no-cache&#xd;&#xa;Set-Cookie&#x3a; PHPSESSID&#x3d;3696on897sncfp18jb800jnvfl&#x3b; path&#x3d;&#x2f;&#xd;&#xa;Set-Cookie&#x3a; \n             security&#x3d;low&#xd;&#xa;Location&#x3a; login.php&#xd;&#xa;Keep-Alive&#x3a; timeout&#x3d;65, max&#x3d;100&#xd;&#xa;Connection&#x3a; \n             Keep-Alive&#xd;&#xa;Content-Type&#x3a; text&#x2f;html&#x3b; charset&#x3d;UTF-8&#xd;&#xa;Content-Length&#x3a; 0&#xd;&#xa;&#xd;&#xa;" \n             injected_arg="" referer_url="">\n   <request host="www.example.com" port="80" secure="false" raw_request="GET &#x2f; HTTP&#x2f;1.1&#xd;&#xa;Host&#x3a; \n             www.example.com#xd;&#xa;User-Agent&#x3a; Mozilla&#x2f;5.0 &#x28;Windows NT 5.2&#x3b; WOW64&#x3b; rv&#x3a;21.0&#x29; \n             Gecko&#x2f;20100101 Firefox&#x2f;21.0&#x2f;Veracode Security Scan&#x2f;support&#x40;veracode.com&#xd;&#xa;Accept&#x3a; \n             &#x2a;&#x2f;&#x2a;&#xd;&#xa;Connection&#x3a; keep-alive&#xd;&#xa;Accept-Encoding&#x3a; identity&#xd;&#xa;Accept-Language&#x3a; \n             en-us,en&#x3b;q&#x3d;0.5&#xd;&#xa;Content-Length&#x3a; 0&#xd;&#xa;&#xd;&#xa;" method="GET" protocol="HTTP" \n             url="http&#x3a;&#x2f;&#x2f;dvwa.sa.veracode.io&#x2f;" path="&#x2f;" uri="&#x2f;" body="">\n      <header name="Host" value="www.example.com"/>\n      <header name="User-Agent" value="Mozilla&#x2f;5.0 &#x28;Windows NT 5.2&#x3b; WOW64&#x3b; rv&#x3a;21.0&#x29; Gecko&#x2f;20100101 \n         Firefox&#x2f;21.0&#x2f;Veracode Security Scan&#x2f;support&#x40;veracode.com"/>\n      <header name="Accept" value="&#x2a;&#x2f;&#x2a;"/>\n      <header name="Connection" value="keep-alive"/>\n      <header name="Accept-Encoding" value="identity"/>\n      <header name="Accept-Language" value="en-us,en&#x3b;q&#x3d;0.5"/>\n      <header name="Content-Length" value="0"/>\n   </request>\n</dynamicfinding>\n')))}p.isMDXComponent=!0}}]);