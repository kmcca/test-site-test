"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4238],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},50091:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const a={title:"Conditions of Controls in Agent-Based Scanning Rules",slug:"/r/Conditions_of_Controls_in_Agent_Based_Scanning_Rules"},o=void 0,s={unversionedId:"guides/sca/using_agent_based_scans/custom_rules_agent/conditions_control_agent_custom_rules",id:"guides/sca/using_agent_based_scans/custom_rules_agent/conditions_control_agent_custom_rules",title:"Conditions of Controls in Agent-Based Scanning Rules",description:"A control condition is a rule to enforce, such as library should not contain high-risk vulnerabilities.",source:"@site/docs/guides/07_sca/04_using_agent_based_scans/12_custom_rules_agent/03_conditions_control_agent_custom_rules.md",sourceDirName:"guides/07_sca/04_using_agent_based_scans/12_custom_rules_agent",slug:"/r/Conditions_of_Controls_in_Agent_Based_Scanning_Rules",permalink:"/km-docusaurus-test/r/Conditions_of_Controls_in_Agent_Based_Scanning_Rules",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Conditions of Controls in Agent-Based Scanning Rules",slug:"/r/Conditions_of_Controls_in_Agent_Based_Scanning_Rules"},sidebar:"tutorialSidebar",previous:{title:"Properties of Controls in Agent-Based Scanning Rules",permalink:"/km-docusaurus-test/r/Properties_of_Controls_in_Agent_Based_Scanning_Rules"},next:{title:"Actions of Controls in Agent-Based Scanning Rules",permalink:"/km-docusaurus-test/r/Actions_of_Controls_in_Agent_Based_Scanning_Rules"}},l={},c=[],u={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A control condition is a rule to enforce, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"library should not contain high-risk vulnerabilities"),"."),(0,i.kt)("p",null,"A condition is made up of three parts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Resource: the entity which is being inspected for certain conditions. Currently, Veracode SCA agent-based scanning can inspect libraries with four dependency relationships",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Any: a library which is either referenced in your configuration file or used by a direct dependency. Encompasses all your libraries."),(0,i.kt)("li",{parentName:"ul"},"Direct: a library which is specifically referenced in your configuration file."),(0,i.kt)("li",{parentName:"ul"},"Transitive: other libraries which are used by the direct dependencies."),(0,i.kt)("li",{parentName:"ul"},"Both: a library which is both referenced in your configuration file and used by a direct dependency."))),(0,i.kt)("li",{parentName:"ul"},"Matcher: a comparison operator that defines how the resource is inspected. The values are ",(0,i.kt)("inlineCode",{parentName:"li"},"should not contain")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"should be"),"."),(0,i.kt)("li",{parentName:"ul"},"Descriptor: the descriptor and its parameters define the checks performed against the resource. The current descriptors available are vulnerability, license, and library.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Veracode SCA agent-based scanning can check that:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"A library should not contain vulnerabilities with certain parameters. This check uses the ",(0,i.kt)("inlineCode",{parentName:"li"},"should not contain")," matcher."),(0,i.kt)("li",{parentName:"ul"},"A library should not contain licenses with certain parameters. This check uses the ",(0,i.kt)("inlineCode",{parentName:"li"},"should not contain")," matcher."),(0,i.kt)("li",{parentName:"ul"},"A library should be the latest version. This check uses the ",(0,i.kt)("inlineCode",{parentName:"li"},"should be")," matcher."))),(0,i.kt)("li",{parentName:"ul"},"Parameters for vulnerability descriptor",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Severity: check for a vulnerability of high, medium, or low risk."),(0,i.kt)("li",{parentName:"ul"},"Vulnerable Method: check for vulnerabilities where vulnerable methods were or were not found."),(0,i.kt)("li",{parentName:"ul"},"Override Control Severity with CVSS Score: for vulnerability issues only, set the severity of the violated control to the CVSS score of that vulnerability instead of manually assigning a severity. See ",(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/Properties_of_Controls_in_Agent_Based_Scanning_Rules"},"Properties of a Control"),"."))),(0,i.kt)("li",{parentName:"ul"},"Parameters for license descriptor",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Kind: check for specific licenses by name or check for licenses with a selected ",(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_integrated_license_agent"},"risk rating"),". You can exclude specific licenses by name from the risk rating parameter.")))))))}d.isMDXComponent=!0}}]);