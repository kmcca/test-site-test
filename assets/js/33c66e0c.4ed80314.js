"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2743],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(y,s(s({ref:t},p),{},{components:n})):a.createElement(y,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99272:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={title:"Create a Dynamic Analysis with a User Agent and Blocklisted URLs Using the REST API",slug:"/r/t_dynamic_useragent"},s=void 0,o={unversionedId:"guides/apis/rest_apis/dynamic_rest_apis/dynamic_api_create_with_useragent_blocklisted",id:"guides/apis/rest_apis/dynamic_rest_apis/dynamic_api_create_with_useragent_blocklisted",title:"Create a Dynamic Analysis with a User Agent and Blocklisted URLs Using the REST API",description:"You can use the Dynamic Analysis API to create an analysis that scans multiple URLs, applies a user agent, and blocklists specific URLs.",source:"@site/docs/guides/15_apis/04_rest_apis/05_dynamic_rest_apis/07_dynamic_api_create_with_useragent_blocklisted.md",sourceDirName:"guides/15_apis/04_rest_apis/05_dynamic_rest_apis",slug:"/r/t_dynamic_useragent",permalink:"/km-docusaurus-test/r/t_dynamic_useragent",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Create a Dynamic Analysis with a User Agent and Blocklisted URLs Using the REST API",slug:"/r/t_dynamic_useragent"},sidebar:"tutorialSidebar",previous:{title:"Create a Dynamic Analysis with a Crawl Script Using the REST API",permalink:"/km-docusaurus-test/r/Create_a_Dynamic_Analysis_with_a_Crawl_Script_Using_the_REST_API"},next:{title:"Configure a Dynamic Analysis for Internal Scanning with the REST API",permalink:"/km-docusaurus-test/r/t_dynamic_ISM"}},l={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can use the Dynamic Analysis API to create an analysis that scans multiple URLs, applies a user agent, and blocklists specific URLs."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To complete this task:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter values for the ",(0,r.kt)("inlineCode",{parentName:"p"},"scan_config_request"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"scan_setting"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"blacklist_configuration"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"org_info"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"visibility"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"user_agent")," properties in the JSON file."),(0,r.kt)("p",{parentName:"li"},"If you want to specify a custom header, set ",(0,r.kt)("inlineCode",{parentName:"p"},'"type: "CUSTOM"'),". If you use a predefined agent, such as Internet Explorer 11, you cannot include a ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_header")," field.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run this command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'http --auth-type=veracode_hmac POST "https://api.veracode.com/was/configservice/v1/analyses" < input.json\n')),(0,r.kt)("p",{parentName:"li"},"This is an example of a Dynamic Analysis of multiple URLs. This analysis specifies the user agent string and the URLs to exclude from both the analysis and the URL scan."),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The URLs that you blocklist at the URL-specific level take precedence over the URLs in this blocklist. For example, if you blocklist a URL in your URL configuration, but not in the configuration of the whole Dynamic Analysis, the URL configuration blocklist determines which URLs to exclude from the scan.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Name-of-Your-Dynamic-Analysis",\n  "scans": [\n    {\n      "scan_config_request": {\n        "target_url": {\n          "url": "http://www.example.com/one/"\n        },\n        "scan_setting": {\n          "user_agent": {\n            "type": "CUSTOM",\n            "custom_header": "Custom User Agent String"\n          },\n          "blacklist_configuration": {\n            "blackList": [\n              {\n                "url": "http://www.example.com/one/black/",\n                "http_and_https": true\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      "scan_config_request": {\n        "target_url": {\n          "url": "http://www.example.com/two/",\n          "http_and_https": true\n        }\n      }\n    }\n  ],\n  "org_info": {\n    "email": "user@example.com"\n  },\n  "visibility": {\n    "setup_type": "SEC_LEADS_ONLY",\n    "team_identifiers": []\n  },\n  "scan_setting": {\n    "blacklist_configuration": {\n      "blackList": [\n        {\n          "url": "http://www.example.com/black1/",\n          "http_and_https": false\n        },\n        {\n          "url": "http://www.example.com/black2/site.html",\n          "http_and_https": false\n        }\n      ]\n    },\n    "user_agent": {\n      "type": "CUSTOM",\n      "custom_header": "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko VERACODE"\n    }\n  }\n}     \n')))))}u.isMDXComponent=!0}}]);