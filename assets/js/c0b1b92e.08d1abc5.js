"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[79166],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,g=d["".concat(c,".").concat(m)]||d[m]||l[m]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const i={title:"HMAC Signing Example in C#",slug:"/r/c_hmac_signing_example_c_sharp"},o=void 0,s={unversionedId:"guides/apis/apis_hmac_auth/hmac_signing_example_csharp",id:"guides/apis/apis_hmac_auth/hmac_signing_example_csharp",title:"HMAC Signing Example in C#",description:"This is a C# example of how to enable HMAC signing within your application shows how to authenticate when using the Veracode APIs.",source:"@site/docs/guides/15_apis/03_apis_hmac_auth/03_hmac_signing_example_csharp.md",sourceDirName:"guides/15_apis/03_apis_hmac_auth",slug:"/r/c_hmac_signing_example_c_sharp",permalink:"/km-docusaurus-test/r/c_hmac_signing_example_c_sharp",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"HMAC Signing Example in C#",slug:"/r/c_hmac_signing_example_c_sharp"},sidebar:"tutorialSidebar",previous:{title:"HMAC Signing Example in Python",permalink:"/km-docusaurus-test/r/c_hmac_signing_example_python"},next:{title:"Troubleshooting HMAC",permalink:"/km-docusaurus-test/r/Troubleshooting_HMAC"}},c={},u=[{value:"<code>HmacAuthHeader.cs</code>",id:"hmacauthheadercs",level:2},{value:"<code>Program.cs</code>",id:"programcs",level:2}],p={toc:u};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is a C# example of how to enable HMAC signing within your application shows how to authenticate when using the Veracode APIs."),(0,a.kt)("p",null,"You can download the code for this example from ",(0,a.kt)("a",{parentName:"p",href:"https://tools.veracode.com/integrations/Microsoft/VisualStudio/update/Veracode.HmacExample.zip"},"tools.veracode.com/integrations/Microsoft/Microsoft/VisualStudio/update/Veracode.HmacExample.zip"),"."),(0,a.kt)("h2",{id:"hmacauthheadercs"},(0,a.kt)("inlineCode",{parentName:"h2"},"HmacAuthHeader.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},' using System;\n using System.Runtime.Remoting.Metadata.W3cXsd2001;\n using System.Security.Cryptography;\n using System.Text;\n using System.Text.RegularExpressions;\n\n namespace Veracode.HmacExample.App {\n   public abstract class HmacAuthHeader {\n     private static readonly RNGCryptoServiceProvider RngRandom = new RNGCryptoServiceProvider();\n\n     public static readonly HmacAuthHeader HmacSha256 = new HmacSha256AuthHeader();\n\n     private sealed class HmacSha256AuthHeader: HmacAuthHeader {\n       protected override string GetHashAlgorithm() {\n         return "HmacSHA256";\n       }\n\n       protected override string GetAuthorizationScheme() {\n         return "VERACODE-HMAC-SHA-256";\n       }\n\n       protected override string GetRequestVersion() {\n         return "vcode_request_version_1";\n       }\n\n       protected override string GetTextEncoding() {\n         return "UTF-8";\n       }\n\n       protected override int GetNonceSize() {\n         return 16;\n       }\n\n       internal HmacSha256AuthHeader() {}\n     }\n\n     protected abstract string GetHashAlgorithm();\n     protected abstract string GetAuthorizationScheme();\n     protected abstract string GetRequestVersion();\n     protected abstract string GetTextEncoding();\n     protected abstract int GetNonceSize();\n\n     protected string CurrentDateStamp() {\n       return ((long)((TimeSpan)(DateTime.UtcNow - new DateTime(1970, 1, 1))).TotalMilliseconds).ToString();\n     }\n\n     protected byte[] NewNonce(int size) {\n       byte[] nonceBytes = new byte[size];\n       RngRandom.GetBytes(nonceBytes);\n\n       return nonceBytes;\n     }\n\n     protected byte[] ComputeHash(byte[] data, byte[] key) {\n       HMAC mac = HMAC.Create(GetHashAlgorithm());\n       mac.Key = key;\n\n       return mac.ComputeHash(data);\n     }\n\n     protected byte[] CalculateDataSignature(byte[] apiKeyBytes, byte[] nonceBytes, string dateStamp, string data) {\n       byte[] kNonce = ComputeHash(nonceBytes, apiKeyBytes);\n       byte[] kDate = ComputeHash(Encoding.GetEncoding(GetTextEncoding()).GetBytes(dateStamp), kNonce);\n       byte[] kSignature = ComputeHash(Encoding.GetEncoding(GetTextEncoding()).GetBytes(GetRequestVersion()), kDate);\n\n       return ComputeHash(Encoding.GetEncoding(GetTextEncoding()).GetBytes(data), kSignature);\n     }\n\n     public string CalculateAuthorizationHeader(string apiId, string apiKey, string hostName, string uriString, string urlQueryParams, string httpMethod) {\n       try {\n         if (urlQueryParams != null) {\n           uriString += (urlQueryParams);\n         }\n         string data = $ "id={apiId}&host={hostName}&url={uriString}&method={httpMethod}";\n         string dateStamp = CurrentDateStamp();\n         byte[] nonceBytes = NewNonce(GetNonceSize());\n         byte[] dataSignature = CalculateDataSignature(FromHexBinary(apiKey), nonceBytes, dateStamp, data);\n         string authorizationParam = $ "id={apiId},ts={dateStamp},nonce={ToHexBinary(nonceBytes)},sig={ToHexBinary(dataSignature)}";\n\n         return GetAuthorizationScheme() + " " + authorizationParam;\n       } catch (Exception e) {\n         throw new Exception(e.Message, e);\n       }\n     }\n\n     public static string ToHexBinary(byte[] bytes) {\n       return new SoapHexBinary(bytes).ToString();\n     }\n\n     public static byte[] FromHexBinary(string hexBinaryString) {\n       return SoapHexBinary.Parse(hexBinaryString).Value;\n     }\n\n     public static bool IsValidHexBinary(string hexBinaryString) {\n       if (hexBinaryString != null) {\n         try {\n           byte[] bytes = FromHexBinary(hexBinaryString);\n           return bytes != null;\n         } catch (Exception) {}\n       }\n\n       return false;\n     }\n\n     public static bool IsValidAuthHeaderToken(string authHeaderToken) {\n       if (authHeaderToken != null) {\n         // For valid Authorization header token syntax see https://www.ietf.org/rfc/rfc2617.txt, https://www.ietf.org/rfc/rfc2068.txt\n         bool isMatch = Regex.IsMatch(authHeaderToken, "^[\\\\x21\\\\x23-\\\\x27\\\\x2A-\\\\x2B\\\\x2D-\\\\x2E\\\\x30-\\\\x39\\\\x41-\\\\x5A\\\\x5E-\\\\x7A\\\\x7C\\\\x7E]+$");\n\n         return isMatch;\n       }\n\n       return false;\n     }\n\n     private HmacAuthHeader() {}\n   }\n }\n')),(0,a.kt)("h2",{id:"programcs"},(0,a.kt)("inlineCode",{parentName:"h2"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'using System;\nusing System.Net;\n\nnamespace Veracode.HmacExample.App {\n  public class Program {\n    private\n    const string AuthorizationHeader = "Authorization";\n    private\n    const string ApiId = "VERACODE_API_ID_GOES_HERE";\n    private\n    const string ApiKey = "VERACODE_SECRET_KEY_GOES_HERE";\n\n    public static void Main(string[] args) {\n      try {\n        const string urlBase = "analysiscenter.veracode.com";\n        const string urlPath = "/api/5.0/getapplist.do";\n        var urlParams = string.Empty;\n        const string httpVerb = "GET";\n\n        var webClient = new WebClient {\n          BaseAddress = $ "https://{urlBase}"\n        };\n\n        var authorization = HmacAuthHeader.HmacSha256.CalculateAuthorizationHeader(ApiId, ApiKey, urlBase, urlPath, urlParams, httpVerb);\n\n        webClient.Headers.Add(AuthorizationHeader, authorization);\n\n        var result = webClient.DownloadString(urlPath);\n\n        Console.WriteLine(result);\n      } catch (Exception ex) {\n        Console.WriteLine(ex.Message);\n      } finally {\n        Console.WriteLine("Press any key to continue.");\n        Console.ReadKey();\n      }\n    }\n  }\n}\n')))}l.isMDXComponent=!0}}]);