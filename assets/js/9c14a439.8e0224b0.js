"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[23507],{3905:(e,n,i)=>{i.d(n,{Zo:()=>d,kt:()=>m});var a=i(67294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,a)}return i}function s(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function c(e,n){if(null==e)return{};var i,a,t=function(e,n){if(null==e)return{};var i,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var o=a.createContext({}),l=function(e){var n=a.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):s(s({},n),e)),i},d=function(e){var n=l(e.components);return a.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var i=e.components,t=e.mdxType,r=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(i),m=t,b=u["".concat(o,".").concat(m)]||u[m]||p[m]||r;return i?a.createElement(b,s(s({ref:n},d),{},{components:i})):a.createElement(b,s({ref:n},d))}));function m(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=i.length,s=new Array(r);s[0]=u;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c.mdxType="string"==typeof e?e:t,s[1]=c;for(var l=2;l<r;l++)s[l]=i[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},89197:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=i(87462),t=(i(67294),i(3905));const r={title:"Review Container Security Findings",slug:"/r/Review_Container_Security_Findings"},s=void 0,c={unversionedId:"guides/container_security/review_container_findings",id:"guides/container_security/review_container_findings",title:"Review Container Security Findings",description:"After you complete a Veracode Container Security scan, your results appear in your command window. If you include the -o flag, the results appear in a new file. Scan results include the following categories of findings:",source:"@site/docs/guides/09_container_security/05_review_container_findings.md",sourceDirName:"guides/09_container_security",slug:"/r/Review_Container_Security_Findings",permalink:"/km-docusaurus-test/r/Review_Container_Security_Findings",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Review Container Security Findings",slug:"/r/Review_Container_Security_Findings"},sidebar:"tutorialSidebar",previous:{title:"Scan with Veracode Container Security",permalink:"/km-docusaurus-test/r/Scan_with_Veracode_Container_Security"},next:{title:"Generate an SBOM with Veracode Container Security",permalink:"/km-docusaurus-test/r/Generate_an_SBOM_with_Veracode_Container_Security"}},o={},l=[{value:"Policy Evaluations",id:"policy-evaluations",level:2},{value:"Example Findings",id:"example-findings",level:2}],d={toc:l};function p(e){let{components:n,...i}=e;return(0,t.kt)("wrapper",(0,a.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"After you complete a Veracode Container Security scan, your results appear in your command window. If you include the ",(0,t.kt)("inlineCode",{parentName:"p"},"-o")," flag, the results appear in a new file. Scan results include the following categories of findings:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Known vulnerabilities: vulnerabilities known in the ",(0,t.kt)("a",{parentName:"li",href:"https://github.com/anchore/grype#grypes-database"},"Grype database"),"."),(0,t.kt)("li",{parentName:"ul"},"Configuration issues in infrastructure as code (IaC) files: ",(0,t.kt)("a",{parentName:"li",href:"https://aquasecurity.github.io/trivy/v0.19.2/misconfiguration/iac/"},"misconfigurations in IaC files"),", such as Dockerfiles, Kubernetes manifests, and Terraform files."),(0,t.kt)("li",{parentName:"ul"},"Exposed secrets: ",(0,t.kt)("a",{parentName:"li",href:"https://aquasecurity.github.io/trivy/v0.27.1/docs/secret/scanning/"},"insecurely storing, using, and managing secrets"),", including credentials and cryptographic keys."),(0,t.kt)("li",{parentName:"ul"},"Docker CIS Benchmark violations: violations of the guidelines defined in the ",(0,t.kt)("a",{parentName:"li",href:"https://learn.cisecurity.org/benchmarks"},"CIS Docker Benchmarks"),"."),(0,t.kt)("li",{parentName:"ul"},"Insecure file permissions: insecure permissions using ",(0,t.kt)("a",{parentName:"li",href:"https://www.cbtnuggets.com/blog/technology/system-admin/linux-file-permissions-understanding-setuid-setgid-and-the-sticky-bit"},"setuid and setgid"),".")),(0,t.kt)("p",null,"Using the ",(0,t.kt)("inlineCode",{parentName:"p"},"--format")," flag, you can specify the output format of the scan results, such as JSON, CycloneDX, or a table. For more details about the supported output formats, see the ",(0,t.kt)("a",{parentName:"p",href:"/km-docusaurus-test/r/veracode_scan#flags"},"format flags"),"."),(0,t.kt)("h2",{id:"policy-evaluations"},"Policy Evaluations"),(0,t.kt)("p",null,"Veracode Container Security performs a basic policy evaluation against the findings. If the scan identifies any of the following findings, it returns ",(0,t.kt)("inlineCode",{parentName:"p"},'"policy-passed": false'),"."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Known vulnerabilities, configuration issues in infrastructure as code (IaC) files, or exposed secrets with a ",(0,t.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/review_severity_exploitability"},"very high or high severity"),"."),(0,t.kt)("li",{parentName:"ul"},"Any Docker CIS Benchmark violation."),(0,t.kt)("li",{parentName:"ul"},"Any insecure file permissions.")),(0,t.kt)("p",null,"If none of those findings are present, the scan returns ",(0,t.kt)("inlineCode",{parentName:"p"},'"policy-passed": true'),"."),(0,t.kt)("h2",{id:"example-findings"},"Example Findings"),(0,t.kt)("p",null,"This sample output is the result of a scan request in readable JSON format:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-json"},'./veracode scan --source alpine:latest --type image -f json\n\n{\n  "vulnerabilities": {\n    "descriptor": {\n      "configuration": "",\n      "db": {\n        "built": "2023-01-23T08:17:51Z",\n        "checksum": "sha256:45441cfa64a877caea9c231a17c508f7d43cae415dce7103f2ba236a35e466f7",\n        "error": null,\n        "location": "5",\n        "schemaVersion": 5\n      },\n      "name": "grype",\n      "version": "[not provided]"\n    },\n    "distro": {\n      "idLike": [],\n      "name": "alpine",\n      "version": "3.17.0"\n    },\n    "matches": [\n      {\n        "artifact": {\n          "cpes": [\n            "cpe:2.3:a:libcrypto3:libcrypto3:3.0.7-r0:*:*:*:*:*:*:*"\n          ],\n          "language": "",\n          "licenses": [\n            "Apache-2.0"\n          ],\n          "locations": [\n            {\n              "layerID": "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834",\n              "path": "/lib/apk/db/installed"\n            }\n          ],\n          "name": "libcrypto3",\n          "purl": "pkg:alpine/libcrypto3@3.0.7-r0?arch=aarch64\\u0026upstream=openssl\\u0026distro=alpine-3.17.0",\n          "type": "apk",\n          "upstreams": [\n            {\n              "name": "openssl"\n            }\n          ],\n          "version": "3.0.7-r0"\n        },\n        "matchDetails": [\n          {\n            "found": {\n              "versionConstraint": "\\u003c 3.0.7-r2 (apk)"\n            },\n            "matcher": "apk-matcher",\n            "searchedBy": {\n              "distro": {\n                "type": "alpine",\n                "version": "3.17.0"\n              },\n              "namespace": "alpine:distro:alpine:3.17",\n              "package": {\n                "name": "openssl",\n                "version": "3.0.7-r0"\n              }\n            },\n            "type": "exact-indirect-match"\n          }\n        ],\n        "relatedVulnerabilities": [\n          {\n            "cvss": [\n              {\n                "metrics": {\n                  "baseScore": 7.5,\n                  "exploitabilityScore": 3.9,\n                  "impactScore": 3.6\n                },\n                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",\n                "vendorMetadata": {},\n                "version": "3.1"\n              }\n            ],\n            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-3996",\n            "description": "If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively. On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs. Policy processing being enabled on a publicly facing server is not considered to be a common setup. Policy processing is enabled by passing the `-policy\' argument to the command line utilities or by calling either `X509_VERIFY_PARAM_add0_policy()\' or `X509_VERIFY_PARAM_set1_policies()\' functions.",\n            "id": "CVE-2022-3996",\n            "namespace": "nvd:cpe",\n            "severity": "High",\n            "urls": [\n              "https://github.com/openssl/openssl/commit/7725e7bfe6f2ce8146b6552b44e0d226be7638e7",\n              "https://www.openssl.org/news/secadv/20221213.txt"\n            ]\n          }\n        ],\n        "vulnerability": {\n          "advisories": [],\n          "cvss": [],\n          "dataSource": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996",\n          "fix": {\n            "state": "fixed",\n            "versions": [\n              "3.0.7-r2"\n            ]\n          },\n          "id": "CVE-2022-3996",\n          "namespace": "alpine:distro:alpine:3.17",\n          "severity": "High",\n          "urls": [\n            "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996"\n          ]\n        }\n      },\n      {\n        "artifact": {\n          "cpes": [\n            "cpe:2.3:a:libssl3:libssl3:3.0.7-r0:*:*:*:*:*:*:*"\n          ],\n          "language": "",\n          "licenses": [\n            "Apache-2.0"\n          ],\n          "locations": [\n            {\n              "layerID": "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834",\n              "path": "/lib/apk/db/installed"\n            }\n          ],\n          "name": "libssl3",\n          "purl": "pkg:alpine/libssl3@3.0.7-r0?arch=aarch64\\u0026upstream=openssl\\u0026distro=alpine-3.17.0",\n          "type": "apk",\n          "upstreams": [\n            {\n              "name": "openssl"\n            }\n          ],\n          "version": "3.0.7-r0"\n        },\n        "matchDetails": [\n          {\n            "found": {\n              "versionConstraint": "\\u003c 3.0.7-r2 (apk)"\n            },\n            "matcher": "apk-matcher",\n            "searchedBy": {\n              "distro": {\n                "type": "alpine",\n                "version": "3.17.0"\n              },\n              "namespace": "alpine:distro:alpine:3.17",\n              "package": {\n                "name": "openssl",\n                "version": "3.0.7-r0"\n              }\n            },\n            "type": "exact-indirect-match"\n          }\n        ],\n        "relatedVulnerabilities": [\n          {\n            "cvss": [\n              {\n                "metrics": {\n                  "baseScore": 7.5,\n                  "exploitabilityScore": 3.9,\n                  "impactScore": 3.6\n                },\n                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",\n                "vendorMetadata": {},\n                "version": "3.1"\n              }\n            ],\n            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-3996",\n            "description": "If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively. On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs. Policy processing being enabled on a publicly facing server is not considered to be a common setup. Policy processing is enabled by passing the `-policy\' argument to the command line utilities or by calling either `X509_VERIFY_PARAM_add0_policy()\' or `X509_VERIFY_PARAM_set1_policies()\' functions.",\n            "id": "CVE-2022-3996",\n            "namespace": "nvd:cpe",\n            "severity": "High",\n            "urls": [\n              "https://github.com/openssl/openssl/commit/7725e7bfe6f2ce8146b6552b44e0d226be7638e7",\n              "https://www.openssl.org/news/secadv/20221213.txt"\n            ]\n          }\n        ],\n        "vulnerability": {\n          "advisories": [],\n          "cvss": [],\n          "dataSource": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996",\n          "fix": {\n            "state": "fixed",\n            "versions": [\n              "3.0.7-r2"\n            ]\n          },\n          "id": "CVE-2022-3996",\n          "namespace": "alpine:distro:alpine:3.17",\n          "severity": "High",\n          "urls": [\n            "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996"\n          ]\n        }\n      }\n    ],\n    "source": {\n      "target": {\n        "architecture": "arm64",\n        "config": "eyJhcmNoaXRlY3R1cmUiOiJhcm02NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giXSwiSW1hZ2UiOiJzaGEyNTY6OWI1NGRkZTNiM2Q5ZWFhOGMwNzFlZThlN2NkYTk5OGUwZmRiZWIzNmY3NjhhNmY4NWExYTEyMTlkZjUxYzI0ZiIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpudWxsLCJMYWJlbHMiOm51bGx9LCJjb250YWluZXIiOiIyMTIyNTZhODRiMDEyNzhlYTQ3Y2QzY2QyZjRhMjA0OTA0ZDZkOTk4MjU2NTlmZDBjNDIxMGI3MWUzY2I1NWYxIiwiY29udGFpbmVyX2NvbmZpZyI6eyJIb3N0bmFtZSI6IjIxMjI1NmE4NGIwMSIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giLCItYyIsIiMobm9wKSAiLCJDTUQgW1wiL2Jpbi9zaFwiXSJdLCJJbWFnZSI6InNoYTI1Njo5YjU0ZGRlM2IzZDllYWE4YzA3MWVlOGU3Y2RhOTk4ZTBmZGJlYjM2Zjc2OGE2Zjg1YTFhMTIxOWRmNTFjMjRmIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOm51bGwsIkxhYmVscyI6e319LCJjcmVhdGVkIjoiMjAyMi0xMS0yMlQyMjozOToyMS4xNzY0OTA5MDVaIiwiZG9ja2VyX3ZlcnNpb24iOiIyMC4xMC4xNyIsImhpc3RvcnkiOlt7ImNyZWF0ZWQiOiIyMDIyLTExLTIyVDIyOjM5OjIxLjAzMzk3MDQxM1oiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgQUREIGZpbGU6Njg1YjVlZGFkZjFkNWJmMGFlYjJhZWMzNWY4MTBkODM4NzZlNmQyZWEwOTAzYjIxM2Y3NWE5YzVmMGRjNTkwMSBpbiAvICJ9LHsiY3JlYXRlZCI6IjIwMjItMTEtMjJUMjI6Mzk6MjEuMTc2NDkwOTA1WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgQ01EIFtcIi9iaW4vc2hcIl0iLCJlbXB0eV9sYXllciI6dHJ1ZX1dLCJvcyI6ImxpbnV4Iiwicm9vdGZzIjp7InR5cGUiOiJsYXllcnMiLCJkaWZmX2lkcyI6WyJzaGEyNTY6MWI1NzdhOGZiOGNlMjUwMjNhMGVjMGExN2E2ZGMzZDZhYTljY2E5ODlmNzU0NTc4MDBjYjU1MTc5ZWUyZTgzNCJdfSwidmFyaWFudCI6InY4In0=",\n        "imageID": "sha256:d3156fec8bcbc7b491a4edc271a7734dcfa186fc73282d4e120eeaaf2ce95c43",\n        "imageSize": 7454073,\n        "layers": [\n          {\n            "digest": "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834",\n            "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",\n            "size": 7454073\n          }\n        ],\n        "manifest": "eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoxNDg3LCJkaWdlc3QiOiJzaGEyNTY6ZDMxNTZmZWM4YmNiYzdiNDkxYTRlZGMyNzFhNzczNGRjZmExODZmYzczMjgyZDRlMTIwZWVhYWYyY2U5NWM0MyJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjo3NzQ1NTM2LCJkaWdlc3QiOiJzaGEyNTY6MWI1NzdhOGZiOGNlMjUwMjNhMGVjMGExN2E2ZGMzZDZhYTljY2E5ODlmNzU0NTc4MDBjYjU1MTc5ZWUyZTgzNCJ9XX0=",\n        "manifestDigest": "sha256:fcf2aaf52719a175f453a6a3f18a3859b8a68150cd5e33d37a3e1fb7205b9c7d",\n        "mediaType": "application/vnd.docker.distribution.manifest.v2+json",\n        "os": "linux",\n        "repoDigests": [\n          "alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4"\n        ],\n        "tags": [\n          "alpine:latest"\n        ],\n        "userInput": "alpine:latest"\n      },\n      "type": "image"\n    }\n  },\n  "secrets": {\n    "ArtifactName": "alpine:latest",\n    "ArtifactType": "container_image",\n    "Metadata": {\n      "DiffIDs": [\n        "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n      ],\n      "ImageConfig": {\n        "architecture": "arm64",\n        "config": {\n          "Cmd": [\n            "/bin/sh"\n          ],\n          "Env": [\n            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\n          ],\n          "Image": "sha256:9b54dde3b3d9eaa8c071ee8e7cda998e0fdbeb36f768a6f85a1a1219df51c24f"\n        },\n        "container": "212256a84b01278ea47cd3cd2f4a204904d6d99825659fd0c4210b71e3cb55f1",\n        "created": "2022-11-22T22:39:21.176490905Z",\n        "docker_version": "20.10.17",\n        "history": [\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop) ADD file:685b5edadf1d5bf0aeb2aec35f810d83876e6d2ea0903b213f75a9c5f0dc5901 in / "\n          },\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop)  CMD [\\"/bin/sh\\"]",\n            "empty_layer": true\n          }\n        ],\n        "os": "linux",\n        "rootfs": {\n          "diff_ids": [\n            "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n          ],\n          "type": "layers"\n        }\n      },\n      "ImageID": "sha256:d3156fec8bcbc7b491a4edc271a7734dcfa186fc73282d4e120eeaaf2ce95c43",\n      "OS": {\n        "Family": "alpine",\n        "Name": "3.17.0"\n      },\n      "RepoDigests": [\n        "alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4"\n      ],\n      "RepoTags": [\n        "alpine:latest"\n      ]\n    },\n    "SchemaVersion": 2\n  },\n  "configs": {\n    "ArtifactName": "alpine:latest",\n    "ArtifactType": "container_image",\n    "Metadata": {\n      "DiffIDs": [\n        "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n      ],\n      "ImageConfig": {\n        "architecture": "arm64",\n        "config": {\n          "Cmd": [\n            "/bin/sh"\n          ],\n          "Env": [\n            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\n          ],\n          "Image": "sha256:9b54dde3b3d9eaa8c071ee8e7cda998e0fdbeb36f768a6f85a1a1219df51c24f"\n        },\n        "container": "212256a84b01278ea47cd3cd2f4a204904d6d99825659fd0c4210b71e3cb55f1",\n        "created": "2022-11-22T22:39:21.176490905Z",\n        "docker_version": "20.10.17",\n        "history": [\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop) ADD file:685b5edadf1d5bf0aeb2aec35f810d83876e6d2ea0903b213f75a9c5f0dc5901 in / "\n          },\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop)  CMD [\\"/bin/sh\\"]",\n            "empty_layer": true\n          }\n        ],\n        "os": "linux",\n        "rootfs": {\n          "diff_ids": [\n            "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n          ],\n          "type": "layers"\n        }\n      },\n      "ImageID": "sha256:d3156fec8bcbc7b491a4edc271a7734dcfa186fc73282d4e120eeaaf2ce95c43",\n      "OS": {\n        "Family": "alpine",\n        "Name": "3.17.0"\n      },\n      "RepoDigests": [\n        "alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4"\n      ],\n      "RepoTags": [\n        "alpine:latest"\n      ]\n    },\n    "SchemaVersion": 2\n  },\n  "policy-results": [\n    {\n      "filename": "root",\n      "namespace": "main",\n      "successes": 5,\n      "failures": [\n        {\n          "msg": "vulnerability.rego failed - Found High software vulnerability: CVE-2022-3996"\n        },\n        {\n          "msg": "docker.rego failed - 4.1 Ensure a user for the container has been created (Scored) level 1"\n        },\n        {\n          "msg": "docker.rego failed - 4.6 Ensure HEALTHCHECK instructions have been added to the container image (Scored) level 1"\n        },\n        {\n          "msg": "docker.rego failed - 4.9 Ensure COPY is used instead of ADD in Dockerfile (Not Scored) level 1"\n        }\n      ]\n    }\n  ],\n  "policy-passed": false\n}                                                   \n')))}p.isMDXComponent=!0}}]);