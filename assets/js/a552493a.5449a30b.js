"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[11575],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(g,o(o({ref:t},p),{},{components:r})):n.createElement(g,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1600:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={title:"Test Veracode for Bugzilla",slug:"/r/Test_the_Bugzilla_Integration"},o=void 0,l={unversionedId:"guides/integrations/ticketing/bugzilla_integration/test_bugzilla_integration",id:"guides/integrations/ticketing/bugzilla_integration/test_bugzilla_integration",title:"Test Veracode for Bugzilla",description:"You can test Veracode for Bugzilla to ensure it can authenticate with Veracode and import findings.",source:"@site/docs/guides/04_integrations/07_ticketing/03_bugzilla_integration/04_test_bugzilla_integration.md",sourceDirName:"guides/04_integrations/07_ticketing/03_bugzilla_integration",slug:"/r/Test_the_Bugzilla_Integration",permalink:"/km-docusaurus-test/r/Test_the_Bugzilla_Integration",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Test Veracode for Bugzilla",slug:"/r/Test_the_Bugzilla_Integration"},sidebar:"tutorialSidebar",previous:{title:"Map Veracode Fields to Bugzilla Fields",permalink:"/km-docusaurus-test/r/Map_Veracode_Fields_to_Bugzilla_Fields"},next:{title:"Veracode Integration for Jira",permalink:"/km-docusaurus-test/r/c_jira_about"}},s={},c=[],p={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You can test Veracode for Bugzilla to ensure it can authenticate with Veracode and import findings."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Before you begin:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You must have valid ",(0,a.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_api_credentials3"},"Veracode API credentials")," to access Veracode."),(0,a.kt)("li",{parentName:"ul"},"When configuring authentication for an integration, Veracode strongly recommends that you use an ",(0,a.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_about_veracode_accounts"},"API service account"),".")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"To complete this task:")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Edit the script ",(0,a.kt)("inlineCode",{parentName:"p"},"importresults.pl"),". ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Locate these lines and replace ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," with your API ID and replace ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," with your API key:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"my $user='username';\nmy $passwd='password'\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You can update other variables in the script. See the ",(0,a.kt)("inlineCode",{parentName:"p"},"README")," file in the ZIP file for more information.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run this command to start the integration:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"perl importresults.pl\n")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"importresults.pl")," script connects to the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_results_main"},"Results API"),", downloads all available results, parses them to the Bugzilla format, and then imports them using the Bugzilla ",(0,a.kt)("inlineCode",{parentName:"p"},"importxml.pl")," library."))))}u.isMDXComponent=!0}}]);