"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40156],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},71812:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const i={title:"Configure Your Codeship Pro Project",slug:"/r/Configure_Your_Codeship_Pro_Project"},a=void 0,p={unversionedId:"guides/sca/setting_up_agent_based_scans/continuous_integration/codeship/configure_codeship_pro_project",id:"guides/sca/setting_up_agent_based_scans/continuous_integration/codeship/configure_codeship_pro_project",title:"Configure Your Codeship Pro Project",description:"Before you begin:",source:"@site/docs/guides/07_sca/03_setting_up_agent_based_scans/01_continuous_integration/05_codeship/03_configure_codeship_pro_project.md",sourceDirName:"guides/07_sca/03_setting_up_agent_based_scans/01_continuous_integration/05_codeship",slug:"/r/Configure_Your_Codeship_Pro_Project",permalink:"/km-docusaurus-test/r/Configure_Your_Codeship_Pro_Project",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Configure Your Codeship Pro Project",slug:"/r/Configure_Your_Codeship_Pro_Project"},sidebar:"tutorialSidebar",previous:{title:"Configure Your Codeship Basic Repository",permalink:"/km-docusaurus-test/r/t_sc_codeship_pipeline"},next:{title:"Integrating Agent-Based Scanning with GitLab",permalink:"/km-docusaurus-test/r/Create_Your_Agent_Based_Scanning_Authentication_Token_for_GitLab_CI"}},c={},s=[],l={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Before you begin:")),(0,o.kt)("p",null,"Generate an Advanced Encryption Standard (AES) key and place the key in a ",(0,o.kt)("inlineCode",{parentName:"p"},"codeship.aes")," file in the root of your project directory. Read additional ",(0,o.kt)("a",{parentName:"p",href:"https://documentation.codeship.com/pro/builds-and-configuration/environment-variables/#encrypted-environment-variables"},"documentation on generating an AES key"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"To complete this task:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Edit the text file containing your environment variables, which you encrypt prior to committing your code.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add the ",(0,o.kt)("inlineCode",{parentName:"p"},"SRCCLR_API_TOKEN")," to the file and set it to the authentication token you generated above.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Save the environment variable file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Encrypt the environment variables using Jet ",(0,o.kt)("a",{parentName:"p",href:"https://documentation.codeship.com/pro/jet-cli/usage-overview/"},"CLI"),"."),(0,o.kt)("p",{parentName:"li"},"A file is generated, called ",(0,o.kt)("inlineCode",{parentName:"p"},"env.encrypted")," in this example, with the encrypted environment variables ",(0,o.kt)("inlineCode",{parentName:"p"},"jet encrypt env env.encrypted"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Before you commit your code, add the env file to your ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore"),", or delete the file after you create it.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Edit the ",(0,o.kt)("inlineCode",{parentName:"p"},"codeship-services.yml")," file, and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"encrypted_env_file")," directive to add your encrypted environment variables from the ",(0,o.kt)("inlineCode",{parentName:"p"},"env.encrypted")," file to your build process:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"app: build: image: myorg/appname dockerfile_path: Dockerfile encrypted_env_file: env.encrypted \n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To scan using Veracode Software Composition Analysis agent-based scanning, in your project, edit the ",(0,o.kt)("inlineCode",{parentName:"p"},"codeship-steps.yml")," file and add this step after your build step:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'- name: sourceclear\n  service: app\n  command:  sh -c "curl -sSL https://download.sourceclear.com/ci.sh | sh\u201d\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Commit the changes to your repository."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Results:")),(0,o.kt)("p",null,"The next time you run your build through Codeship Pro, Veracode SCA performs an agent-based scan of your repository. For details on configuring your Codeship Pro project, see the ",(0,o.kt)("a",{parentName:"p",href:"https://documentation.codeship.com/pro/jet-cli/usage-overview/"},"Codeship Pro documentation"),"."))}u.isMDXComponent=!0}}]);