"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[34926],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=i.createContext({}),p=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(o.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,m=u["".concat(o,".").concat(d)]||u[d]||_[d]||a;return t?i.createElement(m,l(l({ref:n},c),{},{components:t})):i.createElement(m,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=u;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<a;p++)l[p]=t[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},53433:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>_,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=t(87462),r=(t(67294),t(3905));const a={title:"Pipeline Scan Example for Using Gradle with GitLab",slug:"/r/Pipeline_Scan_Example_for_Using_Gradle_with_GitLab"},l=void 0,s={unversionedId:"guides/pipeline_scan/pipeline_scan_gitlab_examples/r_gitlab_gradle",id:"guides/pipeline_scan/pipeline_scan_gitlab_examples/r_gitlab_gradle",title:"Pipeline Scan Example for Using Gradle with GitLab",description:"This example YAML code shows how to add a Pipeline Scan as a build stage in a GitLab Actions build pipeline using Gradle.",source:"@site/docs/guides/08_pipeline_scan/08_pipeline_scan_gitlab_examples/03_r_gitlab_gradle.md",sourceDirName:"guides/08_pipeline_scan/08_pipeline_scan_gitlab_examples",slug:"/r/Pipeline_Scan_Example_for_Using_Gradle_with_GitLab",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_Gradle_with_GitLab",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Pipeline Scan Example for Using Gradle with GitLab",slug:"/r/Pipeline_Scan_Example_for_Using_Gradle_with_GitLab"},sidebar:"tutorialSidebar",previous:{title:"Set GitLab Base Directories for a Pipeline Scan",permalink:"/km-docusaurus-test/r/Set_Environment_Variables_for_GitLab_Base_Directories"},next:{title:"Pipeline Scan Example for Using GitLab and Gradle with Automatic Issue Generation",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_GitLab_and_Gradle_with_Automatic_Issue_Generation"}},o={},p=[],c={toc:p};function _(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This example YAML code shows how to add a Pipeline Scan as a build stage in a GitLab Actions build pipeline using Gradle."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'\n# image must have JDK8+, gradle, curl, unzip\nimage: <image-with-above-requirements>\n\nstages:\n  - build\n  - scan\n\nbuild_job:\n  stage: build\n  artifacts:\n    name: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}_build\n    paths:\n      - build/\n    expire_in: 1 week\n  script: gradle clean build\n\npipeline scan:\n  stage: scan\n  dependencies:\n    - build_job\n  artifacts:\n    name: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}_pipeline-results\n    paths:\n      - results.json\n    expire_in: 1 week\n    when: always\n  script:\n    - curl -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip\n    - unzip pipeline-scan-LATEST.zip pipeline-scan.jar\n    - java -jar pipeline-scan.jar\n      --veracode_api_id "${VERACODE_API_ID}"\n      --veracode_api_key "${VERACODE_API_SECRET}"\n      --file "build/libs/sample.jar"\n      --fail_on_severity="Very High, High"\n      --fail_on_cwe="80"\n      --baseline_file "${CI_BASELINE_PATH}"\n      --timeout "${CI_TIMEOUT}"\n      --project_name "${CI_PROJECT_PATH}"\n      --project_url "${CI_REPOSITORY_URL}"\n      --project_ref "${CI_COMMIT_REF_NAME}"\n\n')))}_.isMDXComponent=!0}}]);