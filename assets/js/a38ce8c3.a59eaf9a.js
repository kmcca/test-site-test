"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[27456],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),o=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=o(e.components);return i.createElement(s.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=o(t),d=a,m=u["".concat(s,".").concat(d)]||u[d]||_[d]||r;return t?i.createElement(m,p(p({ref:n},c),{},{components:t})):i.createElement(m,p({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,p=new Array(r);p[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,p[1]=l;for(var o=2;o<r;o++)p[o]=t[o];return i.createElement.apply(null,p)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},44585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>_,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var i=t(87462),a=(t(67294),t(3905));const r={title:"Dividing Files into Segments for a Pipeline Scan",slug:"/r/Dividing_Files_into_Segments_for_a_Pipeline_Scan"},p=void 0,l={unversionedId:"guides/apis/rest_apis/pipeline_scan_rest_apis/pipeline_scan_rest_apis_prepare/pipeline_scan_api_divide_files",id:"guides/apis/rest_apis/pipeline_scan_rest_apis/pipeline_scan_rest_apis_prepare/pipeline_scan_api_divide_files",title:"Dividing Files into Segments for a Pipeline Scan",description:"To prepare for uploading application files to a Pipeline Scan, you can divide the files into smaller segments.",source:"@site/docs/guides/15_apis/04_rest_apis/12_pipeline_scan_rest_apis/01_pipeline_scan_rest_apis_prepare/01_pipeline_scan_api_divide_files.md",sourceDirName:"guides/15_apis/04_rest_apis/12_pipeline_scan_rest_apis/01_pipeline_scan_rest_apis_prepare",slug:"/r/Dividing_Files_into_Segments_for_a_Pipeline_Scan",permalink:"/km-docusaurus-test/r/Dividing_Files_into_Segments_for_a_Pipeline_Scan",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Dividing Files into Segments for a Pipeline Scan",slug:"/r/Dividing_Files_into_Segments_for_a_Pipeline_Scan"},sidebar:"tutorialSidebar",previous:{title:"Preparing Files for Scanning with the Pipeline Scan",permalink:"/km-docusaurus-test/r/Preparing_Files_for_Scanning_with_the_Pipeline_Scan"},next:{title:"Configuring a Pipeline Scan with the REST API",permalink:"/km-docusaurus-test/r/Configuring_a_Pipeline_Scan_with_the_REST_API"}},s={},o=[],c={toc:o};function _(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To prepare for uploading application files to a Pipeline Scan, you can divide the files into smaller segments."),(0,a.kt)("p",null,"Use this command to divide the file into segments on MacOS and Linux:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"split -n {binary_segments_expected} {filename} \n")),(0,a.kt)("p",null,"To determine the approximate size for each segment, divide the ",(0,a.kt)("inlineCode",{parentName:"p"},"binary_size")," value by the ",(0,a.kt)("inlineCode",{parentName:"p"},"binary_segments_expected")," value. Property descriptions are available in the ",(0,a.kt)("a",{parentName:"p",href:"https://app.swaggerhub.com/apis/Veracode/veracode-pipeline_scan_api_specification/v1"},"Veracode Pipeline Scan API Specification"),"."),(0,a.kt)("p",null,"This command creates output files named with three letters starting with ",(0,a.kt)("inlineCode",{parentName:"p"},"xaa"),". For example, ",(0,a.kt)("inlineCode",{parentName:"p"},"xaa"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"xab"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"xac"),". The command creates the output files in the same directory as the original file."),(0,a.kt)("p",null,"Use this command to divide the file into segments on Windows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"Split-File {full_path_to_file}\\{filename} {binary_size}/{binary_segments_expected}\n")),(0,a.kt)("p",null,"This command uses the Open Source PowerShell function ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/MScholtes/TechNet-Gallery/tree/master/Split-File"},"Split-File, available on GitHub"),". This command creates files named ",(0,a.kt)("inlineCode",{parentName:"p"},"file{nn}.dat"),". For example, ",(0,a.kt)("inlineCode",{parentName:"p"},"file01.dat"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"file02.dat"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"file03.dat"),"."),(0,a.kt)("p",null,"You can parse the response values for ",(0,a.kt)("inlineCode",{parentName:"p"},"{binary_size}")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"{binary_segments_expected}")," to create the Pipeline Scan request."),(0,a.kt)("p",null,"Use this command to get the file size:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"(Get-Item {filename}).length\n")))}_.isMDXComponent=!0}}]);