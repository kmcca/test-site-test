"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89540],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},38256:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"Creating an API Service Account with the Identity API",slug:"/r/c_identity_create_api"},l=void 0,o={unversionedId:"guides/apis/rest_apis/identity_rest_api/identity_api_create_service_account/README",id:"guides/apis/rest_apis/identity_rest_api/identity_api_create_service_account/README",title:"Creating an API Service Account with the Identity API",description:"This use case scenario provides the Identity REST API command and payload for creating an API service account.",source:"@site/docs/guides/15_apis/04_rest_apis/11_identity_rest_api/02_identity_api_create_service_account/README.md",sourceDirName:"guides/15_apis/04_rest_apis/11_identity_rest_api/02_identity_api_create_service_account",slug:"/r/c_identity_create_api",permalink:"/km-docusaurus-test/r/c_identity_create_api",draft:!1,tags:[],version:"current",frontMatter:{title:"Creating an API Service Account with the Identity API",slug:"/r/c_identity_create_api"},sidebar:"tutorialSidebar",previous:{title:"Creating User and SAML User Accounts with the Identity API",permalink:"/km-docusaurus-test/r/c_identity_create_human"},next:{title:"Video: Create and Manage API Service Accounts with the Identity API",permalink:"/km-docusaurus-test/r/Create_and_Manage_API_Service_Accounts_with_the_Identity_API"}},s={},p=[{value:"User Roles",id:"user-roles",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This use case scenario provides the Identity REST API command and payload for creating an API service account."),(0,r.kt)("p",null,"Use this command to create an ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_about_veracode_accounts"},"API service account"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'http --auth-type=veracode_hmac POST "https://api.veracode.com/api/authn/v2/users" < input.json\n')),(0,r.kt)("p",null,"The API passes the JSON file that you populate with the necessary values as shown in this example payload:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "user_name":"vitunicornidentityapi",\n   "first_name":"VITUnicorn",\n   "last_name":"IdentityAPI",\n   "email_address":"unicorn+identityapi1@gmail.com",\n   "ip_restricted":false,\n   "active":true,\n   "roles":[\n      {\n         "role_name":"noteamrestrictionapi"\n      },\n      {\n         "role_name":"apisubmitanyscan"\n      },\n      {\n         "role_name":"uploadapi"\n      },\n      {\n         "role_name":"resultsapi"\n      }\n   ],\n   "permissions":[\n      {\n         "permission_name":"apiUser"\n      }\n   ],\n   "teams":[\n      {\n         "team_id":"teamId"\n      }\n   ]\n}\n')),(0,r.kt)("p",null,"If you want an API service account to have access to all applications, regardless of which team the user is a member, use ",(0,r.kt)("inlineCode",{parentName:"p"},"noteamrestrictionapi"),"."),(0,r.kt)("p",null,"To restrict scan types for a user with the ",(0,r.kt)("inlineCode",{parentName:"p"},"uploadapi")," role, use one or more of these additional roles:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"apisubmitanyscan")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"apisubmitstaticscan")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"apisubmitdynamicscan")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"apisubmitmanualscan"))),(0,r.kt)("h2",{id:"user-roles"},"User Roles"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Role Short Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Role Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Additional Roles Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"submitterapi")),(0,r.kt)("td",{parentName:"tr",align:null},"Upload API - Submit Only"),(0,r.kt)("td",{parentName:"tr",align:null},"Users must have the additional role that matches the type of scan they want to submit: ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitstaticscan"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitdynamicscan"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitmanualscan"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"noteamrestrictionapi"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitanyscan"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uploadapi")),(0,r.kt)("td",{parentName:"tr",align:null},"Upload and Scan API"),(0,r.kt)("td",{parentName:"tr",align:null},"Users must have the additional role that matches the type of scan they want to run: ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitstaticscan"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitdynamicscan"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitmanualscan"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"noteamrestrictionapi"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"apisubmitanyscan"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"resultsapi")),(0,r.kt)("td",{parentName:"tr",align:null},"Results API"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mitigationapi")),(0,r.kt)("td",{parentName:"tr",align:null},"Mitigation API"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"archerreports")),(0,r.kt)("td",{parentName:"tr",align:null},"Archer Reports API"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"greenlightapiuser")),(0,r.kt)("td",{parentName:"tr",align:null},"Greenlight API User"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"adminapi")),(0,r.kt)("td",{parentName:"tr",align:null},"Admin API"),(0,r.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0}}]);