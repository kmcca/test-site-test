"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[78002],{3905:(e,t,r)=>{r.d(t,{Zo:()=>g,kt:()=>p});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},g=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,g=a(e,["components","mdxType","originalType","parentName"]),d=c(r),p=i,f=d["".concat(l,".").concat(p)]||d[p]||u[p]||o;return r?n.createElement(f,s(s({ref:t},g),{},{components:r})):n.createElement(f,s({ref:t},g))}));function p(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},24983:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const o={title:"Ignore Findings in Veracode Greenlight for VS Code Results",slug:"/r/t_ignoreflaws_vs_code"},s=void 0,a={unversionedId:"guides/ides/greenlight/greenlight_vs_code/review_results_greenlight_vs_code/vs_code_ignore_findings",id:"guides/ides/greenlight/greenlight_vs_code/review_results_greenlight_vs_code/vs_code_ignore_findings",title:"Ignore Findings in Veracode Greenlight for VS Code Results",description:"You can ignore findings from Greenlight scans in VS Code to temporarily remove them from the scan results. For example, you might want to ignore findings that continually appear in your results.",source:"@site/docs/guides/05_ides/02_greenlight/07_greenlight_vs_code/03_review_results_greenlight_vs_code/03_vs_code_ignore_findings.md",sourceDirName:"guides/05_ides/02_greenlight/07_greenlight_vs_code/03_review_results_greenlight_vs_code",slug:"/r/t_ignoreflaws_vs_code",permalink:"/km-docusaurus-test/r/t_ignoreflaws_vs_code",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Ignore Findings in Veracode Greenlight for VS Code Results",slug:"/r/t_ignoreflaws_vs_code"},sidebar:"tutorialSidebar",previous:{title:"Filter Findings in VS Code",permalink:"/km-docusaurus-test/r/t_filter_findings"},next:{title:"Stop Ignoring Findings in Veracode Greenlight for VS Code",permalink:"/km-docusaurus-test/r/t_stop_ignore_flaws_vs_code"}},l={},c=[],g={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You can ignore findings from Greenlight scans in VS Code to temporarily remove them from the scan results. For example, you might want to ignore findings that continually appear in your results."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Before you begin:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ensure that you meet the ",(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/Meet_Veracode_Greenlight_Prerequisites"},"Greenlight prerequisites"),"."),(0,i.kt)("li",{parentName:"ul"},"Confirm that you have ",(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_scanning_with_vs_code"},"run a Greenlight scan in VS Code"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"To complete this task:")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In VS Code, in the Veracode Greenlight Findings window, expand the severity category of the finding you want to ignore.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Expand the finding you want to ignore.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click ",(0,i.kt)("strong",{parentName:"p"},"Ignore this finding"),"."),(0,i.kt)("p",{parentName:"li"},"The ignored finding moves from the Findings list to the Ignored Findings list."))))}u.isMDXComponent=!0}}]);