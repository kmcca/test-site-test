"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17014],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,y=u["".concat(l,".").concat(m)]||u[m]||s[m]||o;return r?a.createElement(y,i(i({ref:t},d),{},{components:r})):a.createElement(y,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},64807:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const o={title:"Generate IR to Package iOS and tvOS Apps",slug:"/r/Generate_IR_to_Package_iOS_and_tvOS_Apps"},i=void 0,p={unversionedId:"guides/packaging/ios_tvos/use_xcode/generate_ir",id:"guides/packaging/ios_tvos/use_xcode/generate_ir",title:"Generate IR to Package iOS and tvOS Apps",description:"After you archive and export your debug build with Xcode, you must run gen-ir with your build log before you can upload your application to Veracode.",source:"@site/docs/guides/03_packaging/14_ios_tvos/02_use_xcode/03_generate_ir.md",sourceDirName:"guides/03_packaging/14_ios_tvos/02_use_xcode",slug:"/r/Generate_IR_to_Package_iOS_and_tvOS_Apps",permalink:"/km-docusaurus-test/r/Generate_IR_to_Package_iOS_and_tvOS_Apps",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Generate IR to Package iOS and tvOS Apps",slug:"/r/Generate_IR_to_Package_iOS_and_tvOS_Apps"},sidebar:"tutorialSidebar",previous:{title:"Archive and Export with Xcode",permalink:"/km-docusaurus-test/r/Archive_and_Export_with_Xcode"},next:{title:"Use the Legacy Method to Package iOS and tvOS Apps",permalink:"/km-docusaurus-test/r/Use_the_Legacy_Method_to_Package_iOS_and_tvOS_Apps"}},l={},c=[],d={toc:c};function s(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"After you archive and export your debug build with Xcode, you must run ",(0,n.kt)("inlineCode",{parentName:"p"},"gen-ir")," with your build log before you can upload your application to Veracode."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"To complete this task:")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Open your terminal and change directory to the ",(0,n.kt)("inlineCode",{parentName:"p"},"Veracode")," folder.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run ",(0,n.kt)("inlineCode",{parentName:"p"},"gen-ir")," with your build log and the archive path in the following command:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"gen-ir MyApp.log.txt ~/Desktop/Veracode/MyApp.xcarchive/IR\n")),(0,n.kt)("p",{parentName:"li"},"Ensure ",(0,n.kt)("inlineCode",{parentName:"p"},"MyApp.log.txt")," points to the exported build log, and that ",(0,n.kt)("inlineCode",{parentName:"p"},"MyApp.xcarchive/IR")," is the ",(0,n.kt)("inlineCode",{parentName:"p"},"IR")," folder in the newly created xcarchive.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Create a new archive. For example, you can use the following ",(0,n.kt)("inlineCode",{parentName:"p"},"zip")," command:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"zip -r MyApp.zip MyApp.xcarchive\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/Requesting_a_Static_Scan"},"Upload your iOS application")," to the Veracode Platform for analysis.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Optionally, to upload your archives with Veracode Software Composition Analysis, add the ",(0,n.kt)("inlineCode",{parentName:"p"},"Podfile.lock")," file to the root of another zipped archive. Keep this new zipped archive separate from the one that contains the ",(0,n.kt)("inlineCode",{parentName:"p"},".xcarchive")," folder, as shown in the following command:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"zip MyApp-Podfile.zip Podfile.lock\n")),(0,n.kt)("p",{parentName:"li"},"Upload ",(0,n.kt)("inlineCode",{parentName:"p"},"MyApp-Podfile.zip")," to the same scan as the ",(0,n.kt)("inlineCode",{parentName:"p"},"MyApp.zip")," that you previously uploaded."))))}s.isMDXComponent=!0}}]);