"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[42019],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>p});var o=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=o.createContext({}),d=function(e){var r=o.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=d(e.components);return o.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},f=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=d(t),p=n,_=f["".concat(s,".").concat(p)]||f[p]||u[p]||a;return t?o.createElement(_,i(i({ref:r},l),{},{components:t})):o.createElement(_,i({ref:r},l))}));function p(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=f;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var d=2;d<a;d++)i[d]=t[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},92349:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var o=t(87462),n=(t(67294),t(3905));const a={author:["Mike Howes"],"ft:originID":"veracode_sca_vs_code","ft:lang":"en-US",title:"Veracode SCA Scan for VS Code",slug:"/r/Veracode_SCA_Scan_for_VS_Code",media_dir:"images/"},i=void 0,c={unversionedId:"guides/ides/static_ide/veracode_sca_for_vs_code/README",id:"guides/ides/static_ide/veracode_sca_for_vs_code/README",title:"Veracode SCA Scan for VS Code",description:"Veracode SCA Scan for VS Code is an extension for the VS Code IDE that integrates Veracode Software Composition Analysis (SCA) into your Software Development Lifecycle (SDLC). The extension performs SCA agent-based scans of your project to detect vulnerabilities in open-source libraries and the risk level of third-party licenses. For vulnerabilities, it also provides guidance for fixing security issues from within your IDE.",source:"@site/docs/guides/05_ides/01_static_ide/02_veracode_sca_for_vs_code/README.md",sourceDirName:"guides/05_ides/01_static_ide/02_veracode_sca_for_vs_code",slug:"/r/Veracode_SCA_Scan_for_VS_Code",permalink:"/km-docusaurus-test/r/Veracode_SCA_Scan_for_VS_Code",draft:!1,tags:[],version:"current",frontMatter:{author:["Mike Howes"],"ft:originID":"veracode_sca_vs_code","ft:lang":"en-US",title:"Veracode SCA Scan for VS Code",slug:"/r/Veracode_SCA_Scan_for_VS_Code",media_dir:"images/"},sidebar:"tutorialSidebar",previous:{title:"IDE Plugins",permalink:"/km-docusaurus-test/r/c_ide_intro"},next:{title:"Veracode SCA Scan for VS Code Prerequisites",permalink:"/km-docusaurus-test/r/Veracode_SCA_Scan_for_VS_Code_Prerequisites"}},s={},d=[],l={toc:d};function u(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,o.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Veracode SCA Scan for VS Code is an extension for the VS Code IDE that integrates ",(0,n.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_integrated_benefits"},"Veracode Software Composition Analysis")," (SCA) into your Software Development Lifecycle (SDLC). The extension performs ",(0,n.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_sc_what_is"},"SCA agent-based scans")," of your project to detect ",(0,n.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_sc_vulnerabilities"},"vulnerabilities")," in open-source libraries and the risk level of third-party licenses. For vulnerabilities, it also provides guidance for fixing security issues from within your IDE. "),(0,n.kt)("p",null,"For information on using ",(0,n.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_master_greenlight"},"Veracode Greenlight")," in VS Code, see ",(0,n.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_technical_requirements_vs_code"},"Veracode Greenlight for VS Code"),"."))}u.isMDXComponent=!0}}]);