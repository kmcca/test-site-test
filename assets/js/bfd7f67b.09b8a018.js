"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[21829],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>_});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=l(n),_=r,d=m["".concat(c,".").concat(_)]||m[_]||u[_]||i;return n?a.createElement(d,s(s({ref:t},p),{},{components:n})):a.createElement(d,s({ref:t},p))}));function _(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={title:"Create a Credentials Variable for Dynamic Analysis Login Scripts with the REST API",slug:"/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API"},s=void 0,o={unversionedId:"guides/apis/rest_apis/dynamic_rest_apis/dynamic_api_create_creds_var_login_script",id:"guides/apis/rest_apis/dynamic_rest_apis/dynamic_api_create_creds_var_login_script",title:"Create a Credentials Variable for Dynamic Analysis Login Scripts with the REST API",description:"You can use the Dynamic Analysis API to update credentials fields in login scripts by creating a scan engine variable that the API uses at runtime.",source:"@site/docs/guides/15_apis/04_rest_apis/05_dynamic_rest_apis/04_dynamic_api_create_creds_var_login_script.md",sourceDirName:"guides/15_apis/04_rest_apis/05_dynamic_rest_apis",slug:"/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API",permalink:"/km-docusaurus-test/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Create a Credentials Variable for Dynamic Analysis Login Scripts with the REST API",slug:"/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API"},sidebar:"tutorialSidebar",previous:{title:"Create a Dynamic Analysis of a Single URL with Prescan Verification Using the REST API",permalink:"/km-docusaurus-test/r/Create_a_Dynamic_Analysis_of_a_Single_URL_with_Prescan_Verification_Using_the_REST_API"},next:{title:"Create an Authenticated Dynamic Analysis with the REST API",permalink:"/km-docusaurus-test/r/t_dynamic_logins"}},c={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can use the Dynamic Analysis API to update credentials fields in login scripts by creating a scan engine variable that the API uses at runtime."),(0,r.kt)("p",null,"With a variable login script you do not need to know the credentials for the application to which Dynamic Analysis is logging in, nor do you need to create a new login script every time the credentials values change."),(0,r.kt)("p",null,"Example Python code for using the scan engine variables API feature is available from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/anon-veracoder/veracode-dynamic-analysis-api-examples"},"https://github.com/anon-veracoder/veracode-dynamic-analysis-api-examples"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To complete this task:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the values for the ",(0,r.kt)("inlineCode",{parentName:"p"},"description"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),", and, optional, ",(0,r.kt)("inlineCode",{parentName:"p"},"reference_key")," properties in the JSON file. The reference key is the value you use in your login script. Alternatively, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"scanner_variable_id")," that the API returns in response to a POST in your login scripts.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run this command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'http --auth-type=veracode_hmac POST "https://api.veracode.com/was/configservice/v1/scanner_variables" < input.json\n')),(0,r.kt)("p",{parentName:"li"},"This is an example of how to create a new scan engine variable key-value pair:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "description": "Password key for my application",\n   "reference_key": "MY_PASSWORD_KEY",\n   "value": "hunter2"\n}\n')),(0,r.kt)("p",{parentName:"li"},"This is an excerpt of a Selenium command in a login script that references the key ",(0,r.kt)("inlineCode",{parentName:"p"},"MY_PASSWORD_KEY"),". When the dynamic scan engine executes the login script, the value ",(0,r.kt)("inlineCode",{parentName:"p"},"hunter2")," replaces the key ",(0,r.kt)("inlineCode",{parentName:"p"},"${MY_PASSWORD_KEY}")," at runtime."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},' {\n  "name": "Name-of-Your-Dynamic-Analysis",\n  "id": "5045080b-99ad-47e9-a8a6-7897bf4b5975",\n  "comment": "",\n  "command": "type",\n  "target": "name=password",\n  "targets": [\n    [\n      "name=password",\n      "name"\n    ],\n    [\n      "css=tr:nth-child(7) input:nth-child(2)",\n      "css:finder"\n    ],\n    [\n      "xpath=//input[@name=\'password\']",\n      "xpath:attributes"\n    ],\n    [\n      "xpath=//tr[7]/td[2]/form/input[2]",\n      "xpath:position"\n    ]\n  ],\n  "value": "${MY_PASSWORD_KEY}"\n}  \n')))))}u.isMDXComponent=!0}}]);