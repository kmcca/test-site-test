"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[45397],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,_=u["".concat(s,".").concat(m)]||u[m]||l[m]||i;return t?r.createElement(_,o(o({ref:n},d),{},{components:t})):r.createElement(_,o({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},55843:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const i={title:"Scanning the Dependency Tree for Maven",slug:"/r/Scanning_the_Dependency_Tree_for_Maven"},o=void 0,c={unversionedId:"guides/sca/using_agent_based_scans/finding_and_fixing_vulnerabilities/java_sca_agent/scan_dependency_tree_maven",id:"guides/sca/using_agent_based_scans/finding_and_fixing_vulnerabilities/java_sca_agent/scan_dependency_tree_maven",title:"Scanning the Dependency Tree for Maven",description:"The Veracode SCA agent can scan the output of the Maven dependency:tree command. For dependency tree scanning, the agent requires you to specify the --stdin=maven input option.",source:"@site/docs/guides/07_sca/04_using_agent_based_scans/18_finding_and_fixing_vulnerabilities/02_java_sca_agent/02_scan_dependency_tree_maven.md",sourceDirName:"guides/07_sca/04_using_agent_based_scans/18_finding_and_fixing_vulnerabilities/02_java_sca_agent",slug:"/r/Scanning_the_Dependency_Tree_for_Maven",permalink:"/km-docusaurus-test/r/Scanning_the_Dependency_Tree_for_Maven",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Scanning the Dependency Tree for Maven",slug:"/r/Scanning_the_Dependency_Tree_for_Maven"},sidebar:"tutorialSidebar",previous:{title:"Run an Agent-Based Scan for Maven",permalink:"/km-docusaurus-test/r/Run_an_Agent_Based_Scan_for_Maven"},next:{title:"Fix Example Direct Vulnerability for Maven",permalink:"/km-docusaurus-test/r/Fix_Example_Direct_Vulnerability_for_Maven"}},s={},p=[],d={toc:p};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Veracode SCA agent can scan the output of the Maven ",(0,a.kt)("inlineCode",{parentName:"p"},"dependency:tree")," command. For dependency tree scanning, the agent requires you to specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"--stdin=maven")," input option."),(0,a.kt)("p",null,"You must compile the project before scanning to enable vulnerable method analysis."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"}," Dependency tree scanning disables scanning for all other package managers.")),(0,a.kt)("p",null,"You can scan the dependency tree for Maven using either of these methods:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Redirect the output of the Maven ",(0,a.kt)("inlineCode",{parentName:"p"},"dependency:tree")," command directly to the Veracode SCA agent. For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"mvn dependency:tree | srcclr scan --stdin=maven\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Redirect the output of the ",(0,a.kt)("inlineCode",{parentName:"p"},"dependency:tree")," command into a file and point the Veracode SCA agent to the file using the ",(0,a.kt)("inlineCode",{parentName:"p"},"dependency_tree_file")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/Java_Scan_Directives"},"scan directive"),". For example, in Linux bash:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"mvn dependency:tree > tree.txt\nSRCCLR_DEPENDENCY_TREE_FILE=tree.txt srcclr scan --stdin=maven\n")))),(0,a.kt)("p",null,"If you want to specify the scope of dependencies included in the scan, Veracode recommends you set the ",(0,a.kt)("inlineCode",{parentName:"p"},"scope")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/Multi_Language_Scan_Directives"},"scan directive")," in the agent instead of setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"scope")," property of the ",(0,a.kt)("inlineCode",{parentName:"p"},"mvn")," command. The scan directive allows more precise scope selection."))}l.isMDXComponent=!0}}]);