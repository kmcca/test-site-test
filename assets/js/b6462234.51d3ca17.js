"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[80474],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(n),d=r,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},72269:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"Using HTTPie with the Python Authentication Library",slug:"/r/c_httpie_tool"},o=void 0,l={unversionedId:"guides/apis/apis_hmac_auth/configure_python_hmac/hmac_use_httpie_with_python",id:"guides/apis/apis_hmac_auth/configure_python_hmac/hmac_use_httpie_with_python",title:"Using HTTPie with the Python Authentication Library",description:"The Veracode APIs require that you enable HMAC authentication for your Python application as a security measure for accessing API resources. The Python authentication library provides an integration between HTTPie and the Veracode APIs, which adds HMAC authentication when using the Veracode APIs from the command line.",source:"@site/docs/guides/15_apis/03_apis_hmac_auth/02_configure_python_hmac/01_hmac_use_httpie_with_python.md",sourceDirName:"guides/15_apis/03_apis_hmac_auth/02_configure_python_hmac",slug:"/r/c_httpie_tool",permalink:"/km-docusaurus-test/r/c_httpie_tool",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Using HTTPie with the Python Authentication Library",slug:"/r/c_httpie_tool"},sidebar:"tutorialSidebar",previous:{title:"Install the Python Authentication Library",permalink:"/km-docusaurus-test/r/t_install_api_authen"},next:{title:"Prepare Ubuntu for the Python Authentication Library",permalink:"/km-docusaurus-test/r/c_ubuntu_notes"}},s={},p=[{value:"Using Multiple Profiles",id:"using-multiple-profiles",level:2},{value:"Debugging HTTPie with Python",id:"debugging-httpie-with-python",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Veracode APIs require that you enable HMAC authentication for your Python application as a security measure for accessing API resources. The Python authentication library provides an integration between HTTPie and the Veracode APIs, which adds HMAC authentication when using the Veracode APIs from the command line."),(0,r.kt)("p",null,"You use the library to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Load the ",(0,r.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_api_credentials3"},"Veracode API credentials")),(0,r.kt)("li",{parentName:"ul"},"Generate an HMAC authorization header"),(0,r.kt)("li",{parentName:"ul"},"Issue an HTTP call to a Veracode API with a valid endpoint")),(0,r.kt)("p",null,"The default HTTP method is ",(0,r.kt)("inlineCode",{parentName:"p"},"GET"),". For command examples, see ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_rest_intro"},"REST APIs"),"."),(0,r.kt)("p",null,"To download and install HTTPie, see ",(0,r.kt)("a",{parentName:"p",href:"https://httpie.org"},"https://httpie.org"),"."),(0,r.kt)("p",null,"To learn more about HTTPie, you can run ",(0,r.kt)("inlineCode",{parentName:"p"},"http --help")," and review the HTTPie documentation. You can also get tips and examples from ",(0,r.kt)("a",{parentName:"p",href:"https://devhints.io/httpie"},"https://devhints.io/httpie"),"."),(0,r.kt)("p",null,"HMAC authentication is the same for all calls, but the other aspects of authentication are specific to the API endpoint you want to call."),(0,r.kt)("h2",{id:"using-multiple-profiles"},"Using Multiple Profiles"),(0,r.kt)("p",null,"You may need to store multiple sets of credentials for your interactive user and an API Service Account. You can store multiple profiles in the Veracode credentials file, and specify which profile to use when invoking API commands with HTTPie."),(0,r.kt)("p",null,"If you are using the ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," file, you can define multiple profiles."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"[default]\nveracode_api_key_id = <YOUR_API_KEY_ID>\nveracode_api_key_secret = <YOUR_API_KEY_SECRET>\n\n[api_service]\nveracode_api_key_id = <YOUR_SERVICE_ACCT_API_KEY_ID>\nveracode_api_key_secret = <YOUR_SERVICE_ACCT_API_KEY_SECRET>\n")),(0,r.kt)("p",null,"By default, you still use the default profile. Set ",(0,r.kt)("inlineCode",{parentName:"p"},"VERACODE_API_PROFILE")," to change profiles. For example, to use the profile ",(0,r.kt)("inlineCode",{parentName:"p"},"api_service")," in Bash, or a similar shell environment, enter this command before calling ",(0,r.kt)("inlineCode",{parentName:"p"},"httpie"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ export VERACODE_API_PROFILE=api_service\n")),(0,r.kt)("p",null,"In Bash and similar shells, you can also set environment variables for each command. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'VERACODE_API_PROFILE=api_service http -A veracode_hmac "https://api.veracode.com/appsec/v1/applications"\n')),(0,r.kt)("p",null,"This works on Linux, Mac, and Windows as long as you are using a command shell like Bash or Zsh."),(0,r.kt)("p",null,"To use a different profile on Windows in the DOS prompt, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"SET")," command in the DOS prompt:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"SET VERACODE_API_PROFILE=api_service\n")),(0,r.kt)("h2",{id:"debugging-httpie-with-python"},"Debugging HTTPie with Python"),(0,r.kt)("p",null,"After installing the HMAC library, if you use HTTPie and receive an error that includes: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pkg_resources.DistributionNotFound: The 'PySocks!=1.5.7,>=1.5.6; extra == \"socks\"' distribution was not found and is required by requests \n")),(0,r.kt)("p",null,"Run this command to debug it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'pip install "PySocks!=1.5.7,>=1.5.6"\n')))}u.isMDXComponent=!0}}]);