"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[95894],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||l;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},71225:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const l={title:"Flaw Report XML APIs Quick Reference",slug:"/r/Flaw_Report_XML_APIs_Quick_Reference"},o=void 0,i={unversionedId:"guides/apis/xml_apis/flaw_report_xml_apis/flaw_report_xml_apis_quickref",id:"guides/apis/xml_apis/flaw_report_xml_apis/flaw_report_xml_apis_quickref",title:"Flaw Report XML APIs Quick Reference",description:"This table lists the XML API calls for managing flaw reports. For more detailed information, see the topic for a specific call.",source:"@site/docs/guides/15_apis/05_xml_apis/07_flaw_report_xml_apis/01_flaw_report_xml_apis_quickref.md",sourceDirName:"guides/15_apis/05_xml_apis/07_flaw_report_xml_apis",slug:"/r/Flaw_Report_XML_APIs_Quick_Reference",permalink:"/km-docusaurus-test/r/Flaw_Report_XML_APIs_Quick_Reference",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Flaw Report XML APIs Quick Reference",slug:"/r/Flaw_Report_XML_APIs_Quick_Reference"},sidebar:"tutorialSidebar",previous:{title:"Flaw Report XML API",permalink:"/km-docusaurus-test/r/c_about_flawreport"},next:{title:"generateflawreport.do",permalink:"/km-docusaurus-test/r/r_generateflawreport"}},p={},s=[],c={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This table lists the XML API calls for managing flaw reports. For more detailed information, see the topic for a specific call."),(0,a.kt)("p",null,"Veracode strongly recommends that you use the REST APIs. For new integrations, always use the REST APIs."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"XML API Call"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Optional Parameters"),(0,a.kt)("th",{parentName:"tr",align:null},"Scan Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.veracode.com/r/r_generateflawreport"},(0,a.kt)("inlineCode",{parentName:"a"},"generateflawreport.do"))),(0,a.kt)("td",{parentName:"tr",align:null},"Returns ",(0,a.kt)("inlineCode",{parentName:"td"},"generateflawreport.xml"),", which contains the token you need for downloading the finding report."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"token"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"scan_type")),(0,a.kt)("td",{parentName:"tr",align:null},"\u2014")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.veracode.com/r/r_downloadflawreport"},(0,a.kt)("inlineCode",{parentName:"a"},"downloadflawreport.do"))),(0,a.kt)("td",{parentName:"tr",align:null},"Returns an XML report that lists all fixed and unfixed findings for the specified applications and/or scan type."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"app_id_list"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"scan_type")),(0,a.kt)("td",{parentName:"tr",align:null},"\u2014")))))}u.isMDXComponent=!0}}]);