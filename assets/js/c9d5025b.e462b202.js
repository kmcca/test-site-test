"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29543],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,g=d["".concat(p,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={title:"Configure Your Codeship Basic Repository",slug:"/r/t_sc_codeship_pipeline"},i=void 0,s={unversionedId:"guides/sca/setting_up_agent_based_scans/continuous_integration/codeship/configure_codeship_basic_repo",id:"guides/sca/setting_up_agent_based_scans/continuous_integration/codeship/configure_codeship_basic_repo",title:"Configure Your Codeship Basic Repository",description:"To complete this task:",source:"@site/docs/guides/07_sca/03_setting_up_agent_based_scans/01_continuous_integration/05_codeship/02_configure_codeship_basic_repo.md",sourceDirName:"guides/07_sca/03_setting_up_agent_based_scans/01_continuous_integration/05_codeship",slug:"/r/t_sc_codeship_pipeline",permalink:"/km-docusaurus-test/r/t_sc_codeship_pipeline",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Configure Your Codeship Basic Repository",slug:"/r/t_sc_codeship_pipeline"},sidebar:"tutorialSidebar",previous:{title:"Integrating Agent-Based Scanning with Codeship Basic and Codeship Pro",permalink:"/km-docusaurus-test/r/t_sc_codeship_token"},next:{title:"Configure Your Codeship Pro Project",permalink:"/km-docusaurus-test/r/Configure_Your_Codeship_Pro_Project"}},p={},c=[],u={toc:c};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"To complete this task:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In Codeship, go to the project you want to scan.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Select ",(0,o.kt)("strong",{parentName:"p"},"Project Settings")," ",">"," ",(0,o.kt)("strong",{parentName:"p"},"Testing"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the test pipelines commands, enter the following code after your build commands:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"curl -sSL https://download.sourceclear.com/ci.sh | sh\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Commit these changes to trigger a build for your repository."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Results:")),(0,o.kt)("p",null,"Veracode SCA performs a scan and displays results to your agent-based scanning environment."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Next steps:")),(0,o.kt)("p",null,"If you want to add Veracode SCA agent-based scanning to other repositories, add the installation and scan code above to any test pipelines you want. After you add the ",(0,o.kt)("inlineCode",{parentName:"p"},"SRCCLR_API_TOKEN")," environment variable, you can perform scans on each new build."))}l.isMDXComponent=!0}}]);