"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87914],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1841:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Example SRM Script for HMAC Signing",slug:"/r/Example_SRM_Script_for_HMAC_Signing"},o=void 0,l={unversionedId:"guides/dynamic_analysis/da_scan_apis/api_scan_config/api_scan_srm_script_examples/api_scan_srm_hmac_script_ex",id:"guides/dynamic_analysis/da_scan_apis/api_scan_config/api_scan_srm_script_examples/api_scan_srm_hmac_script_ex",title:"Example SRM Script for HMAC Signing",description:"This example script for Scriptable Request Modification (SRM) signs a request with HMAC. To support this script, Veracode provides the Crypto.js library.",source:"@site/docs/guides/10_dynamic_analysis/02_da_scan_apis/04_api_scan_config/02_api_scan_srm_script_examples/01_api_scan_srm_hmac_script_ex.md",sourceDirName:"guides/10_dynamic_analysis/02_da_scan_apis/04_api_scan_config/02_api_scan_srm_script_examples",slug:"/r/Example_SRM_Script_for_HMAC_Signing",permalink:"/km-docusaurus-test/r/Example_SRM_Script_for_HMAC_Signing",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Example SRM Script for HMAC Signing",slug:"/r/Example_SRM_Script_for_HMAC_Signing"},sidebar:"tutorialSidebar",previous:{title:"Example Scripts for Scriptable Request Modification Authentication",permalink:"/km-docusaurus-test/r/Example_Script_for_Scriptable_Request_Modification_Authentication"},next:{title:"Example SRM Script for OAuth Token Authorization",permalink:"/km-docusaurus-test/r/Example_SRM_Script_for_OAuth_Token_Authorization"}},s={},p=[{value:"Request Object Properties",id:"request-object-properties",level:2},{value:"Request Object Functions",id:"request-object-functions",level:2},{value:"Header Object Properties",id:"header-object-properties",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This example script for Scriptable Request Modification (SRM) signs a request with ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_enabling_hmac"},"HMAC"),". To support this script, Veracode provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"Crypto.js")," library."),(0,r.kt)("p",null,"Ensure you have read the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/Example_Script_for_Scriptable_Request_Modification_Authentication?tocId=sPSGSVk9UtFrdqEHfJoU6g"},"SRM Script Requirements"),"."),(0,r.kt)("p",null,"The script contains two credentials variables defined with the names ",(0,r.kt)("inlineCode",{parentName:"p"},"key_id")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"key_secret"),". For your script, the logic for generating an HMAC header may vary."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const id = vc.variables['key_id'];\nconst key = vc.variables['key_secret'];\n\nconst authorizationScheme = 'VERACODE-HMAC-SHA-256';\nconst requestVersion = \"vcode_request_version_1\";\nconst nonceSize = 16;\n\nfunction computeHashHex(message, key_hex) {\n    return CryptoJS.HmacSHA256(message, CryptoJS.enc.Hex.parse(key_hex)).toString(CryptoJS.enc.Hex);\n}\n\nfunction calulateDataSignature(key, nonceBytes, dateStamp, data) {\n    let kNonce = computeHashHex(nonceBytes, key);\n    let kDate = computeHashHex(dateStamp, kNonce);\n    let kSig = computeHashHex(requestVersion, kDate);\n    let kFinal = computeHashHex(data, kSig);\n    return kFinal;\n}\n\nfunction newNonce() {\n    return CryptoJS.lib.WordArray.random(nonceSize).toString().toUpperCase();\n}\n\nfunction toHexBinary(input) {\n    return CryptoJS.enc.Hex.stringify(CryptoJS.enc.Utf8.parse(input));\n}\n\nfunction calculateVeracodeAuthHeader(request) {\n    let data = `id=${id}&host=${request.getHost()}&url=${request.uri}&method=${request.method}`;\n    let dateStamp = Date.now().toString();\n    let nonceBytes = newNonce(nonceSize);\n    let dataSignature = calulateDataSignature(key, nonceBytes, dateStamp, data);\n    let authorizationParam = `id=${id},ts=${dateStamp},nonce=${toHexBinary(nonceBytes)},sig=${dataSignature}`;\n    let header = authorizationScheme + \" \" + authorizationParam;\n    return header;\n}\n\nfunction run() {\n    let hmacSignedHeader = calculateVeracodeAuthHeader(request);\n    request.addHeader('Authorization', hmacSignedHeader);\n};\n")),(0,r.kt)("p",null,"In this example, the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/Example_Script_for_Scriptable_Request_Modification_Authentication"},"global object")," named ",(0,r.kt)("inlineCode",{parentName:"p"},"request")," is available to scripts upon each call to the initial ",(0,r.kt)("inlineCode",{parentName:"p"},"run()")," function. The following sections describe the functions and properties of this global object."),(0,r.kt)("h2",{id:"request-object-properties"},"Request Object Properties"),(0,r.kt)("p",null,"This table describes the properties of the ",(0,r.kt)("inlineCode",{parentName:"p"},"request")," object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"method")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP method for this request. The value is usually a GET or POST, but other common values are PUT, PATCH, and DELETE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uri")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard URI portion of the HTTP request message. The value is the filepath or endpoint of the request, without the host, port, or protocol. For example, a request to the URL ",(0,r.kt)("inlineCode",{parentName:"td"},"https://example.com/path/file.html")," has a URI of ",(0,r.kt)("inlineCode",{parentName:"td"},"/path/file.html"),". You can modify the URI to change the target, endpoint, or to add URL parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"version")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Version of the HTTP request. The value is commonly ",(0,r.kt)("inlineCode",{parentName:"td"},"HTTP/1.1"),". Veracode does not recommend changing this value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"headers")),(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},"One or more HTTP headers associated with the current request. The objects in the array are instances of a ",(0,r.kt)("inlineCode",{parentName:"td"},"Header")," class that has its own properties. You can modify this array as-is or use helper methods on the request object to more easily modify the headers. Veracode recommends that you only use this property for read-only operations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"body")),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Body message for the HTTP request. The body contains a series of bytes encoded in UTF-8, by default, unless the request headers specify a different encoding.")))),(0,r.kt)("h2",{id:"request-object-functions"},"Request Object Functions"),(0,r.kt)("p",null,"This table describes the functions, methods, and return type for the ",(0,r.kt)("inlineCode",{parentName:"p"},"request")," object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getHost()")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the host name of the host receiving the request. A ",(0,r.kt)("inlineCode",{parentName:"td"},"Host")," header also contains this value. Veracode does not recommend changing the header value because this does not change the target host and it can cause the request to fail.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"addHeader(name, value)")),(0,r.kt)("td",{parentName:"tr",align:null},"Null"),(0,r.kt)("td",{parentName:"tr",align:null},"Adds a header to the header array for this request. If a header with the specified name already exists, this method adds an additional header with the same name. Optionally, you can use this method to send multiple headers with the same name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"setHeader(name, value)")),(0,r.kt)("td",{parentName:"tr",align:null},"Null"),(0,r.kt)("td",{parentName:"tr",align:null},"Sets a header with the provided name in the header array to the provided value. If one or more headers with the provided name already exists, this function removes the headers before setting this value. For example, if there are multiple headers with the same name, this function removes the headers after a call to this method, and leaves only one header with the given name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"removeHeader(name)")),(0,r.kt)("td",{parentName:"tr",align:null},"Null"),(0,r.kt)("td",{parentName:"tr",align:null},"Removes all headers with the given name from the header array for this request. If multiple headers with the given name already exist, this function removes all headers with the same name.")))),(0,r.kt)("h2",{id:"header-object-properties"},"Header Object Properties"),(0,r.kt)("p",null,"This table describes the properties of the ",(0,r.kt)("inlineCode",{parentName:"p"},"header")," object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of a header.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Value associated with a header.")))))}c.isMDXComponent=!0}}]);