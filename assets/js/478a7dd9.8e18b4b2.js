"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8282],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,_=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return a?n.createElement(_,i(i({ref:t},c),{},{components:a})):n.createElement(_,i({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},35893:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={title:"Enable Pull Requests for GitLab",slug:"/r/t_configure_pr_gitlab"},i=void 0,l={unversionedId:"guides/sca/using_agent_based_scans/using_sca_agent/about_automatic_pull_requests/enable_pull_requests_gitlab",id:"guides/sca/using_agent_based_scans/using_sca_agent/about_automatic_pull_requests/enable_pull_requests_gitlab",title:"Enable Pull Requests for GitLab",description:"To use automatic pull requests for Veracode Software Composition Analysis (SCA) agent-based scanning, you need permission to create merge requests in GitLab.",source:"@site/docs/guides/07_sca/04_using_agent_based_scans/09_using_sca_agent/06_about_automatic_pull_requests/03_enable_pull_requests_gitlab.md",sourceDirName:"guides/07_sca/04_using_agent_based_scans/09_using_sca_agent/06_about_automatic_pull_requests",slug:"/r/t_configure_pr_gitlab",permalink:"/km-docusaurus-test/r/t_configure_pr_gitlab",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Enable Pull Requests for GitLab",slug:"/r/t_configure_pr_gitlab"},sidebar:"tutorialSidebar",previous:{title:"Video: Enable Pull Requests for GitHub for Use in Agent-Based Scans",permalink:"/km-docusaurus-test/r/c_sc_video__enable_pull_requests_for_github"},next:{title:"Video: Enable Pull Requests for GitLab for Use in Agent-Based Scans",permalink:"/km-docusaurus-test/r/c_sc_video__enable_pull_requests_for_gitlab"}},s={},p=[],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To use automatic pull requests for Veracode Software Composition Analysis (SCA) agent-based scanning, you need permission to create merge requests in GitLab."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To complete this task:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com"},"GitLab.com"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If prompted, enter your GitLab credentials to log in.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"On the Personal Access Tokens page, enter a token name.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select the ",(0,r.kt)("strong",{parentName:"p"},"api")," checkbox.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Create personal access token"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After generating the token, copy it to your clipboard and save it to a safe location."),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"After you leave the page, you cannot access this token again."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add your token using one of these methods:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add this code to the ",(0,r.kt)("inlineCode",{parentName:"p"},"agent.yml")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_sc_agent_usage"},"file")," installed in your ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.srcclr")," folder:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"scmType: GITLAB\nscmToken: {token copied in earlier step}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Set the token as an environment variable ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/t_sc_gitlab_variable"},"in your CI/CD settings")," or in a command script. For example, add this code in Linux bash:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'export SRCCLR_SCM_TYPE="GITLAB"\nexport SRCCLR_SCM_TOKEN="{token copied in earlier step}"\n'))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If you are using an installation of GitLab other than ",(0,r.kt)("inlineCode",{parentName:"p"},"GitLab.com"),", add your project URL using one of these methods:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add the project URL to the ",(0,r.kt)("inlineCode",{parentName:"p"},"agent.yml")," file installed in your ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.srcclr")," folder:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"scmUrl: https://gitlab.acme.io\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Set the project URL as an environment variable ",(0,r.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/t_sc_gitlab_variable"},"in your CI/CD settings"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Set the project URL as an environment variable in a command script. For example, add this code in Linux bash:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"export SRCCLR_SCM_URL=https://gitlab.acme.io\n")))))))}u.isMDXComponent=!0}}]);