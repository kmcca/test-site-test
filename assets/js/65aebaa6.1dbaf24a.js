"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85963],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?o.createElement(f,a(a({ref:t},p),{},{components:r})):o.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},30182:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=r(87462),n=(r(67294),r(3905));const i={title:"Configure Xcode to Replace Third-Party Libraries",slug:"/r/Configure_Xcode_to_Replace_Third_Party_Libraries"},a=void 0,c={unversionedId:"guides/packaging/ios_tvos/resolve_missing_bitcode_ios/t_use_mock_framework",id:"guides/packaging/ios_tvos/resolve_missing_bitcode_ios/t_use_mock_framework",title:"Configure Xcode to Replace Third-Party Libraries",description:"This product is deprecated. Veracode will delete this topic on February 1, 2023.",source:"@site/docs/guides/03_packaging/14_ios_tvos/04_resolve_missing_bitcode_ios/02_t_use_mock_framework.md",sourceDirName:"guides/03_packaging/14_ios_tvos/04_resolve_missing_bitcode_ios",slug:"/r/Configure_Xcode_to_Replace_Third_Party_Libraries",permalink:"/km-docusaurus-test/r/Configure_Xcode_to_Replace_Third_Party_Libraries",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Configure Xcode to Replace Third-Party Libraries",slug:"/r/Configure_Xcode_to_Replace_Third_Party_Libraries"},sidebar:"tutorialSidebar",previous:{title:"Replacing a Library Using Conditional Compilation Blocks",permalink:"/km-docusaurus-test/r/Replacing_a_Library_Using_Conditional_Compilation_Blocks"},next:{title:"Ionic Packaging",permalink:"/km-docusaurus-test/r/compilation_ionic_framework"}},s={},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"}," This product is deprecated. Veracode will delete this topic on February 1, 2023.")),(0,n.kt)("p",null,"You can force Xcode to create a mock framework so that you can successully build an application."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In Xcode, create a mock framework with a name that includes the name of the library you want to replace. For example, if the original library is named ",(0,n.kt)("inlineCode",{parentName:"p"},"InclusionLib"),", name the new framework ",(0,n.kt)("inlineCode",{parentName:"p"},"InclusionMockLib"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Import this mock framework into the application project.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Edit the source code of your mock framework and stub out any methods and classes that you want to access from your application.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Link the mock framework to the main application and make it a target dependency."))))}u.isMDXComponent=!0}}]);