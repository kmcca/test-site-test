"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[43208],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=i,g=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},69266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),i=(n(67294),n(3905));const a={title:"Mitigation and Comments XML API",slug:"/r/c_using_mitigat_API"},o=void 0,s={unversionedId:"guides/apis/xml_apis/mitigation_xml_apis/README",id:"guides/apis/xml_apis/mitigation_xml_apis/README",title:"Mitigation and Comments XML API",description:"The Mitigation and Comments API enables you to integrate comments on findings and mitigation workflow tasks into IDEs and bug tracking systems.",source:"@site/docs/guides/15_apis/05_xml_apis/05_mitigation_xml_apis/README.md",sourceDirName:"guides/15_apis/05_xml_apis/05_mitigation_xml_apis",slug:"/r/c_using_mitigat_API",permalink:"/km-docusaurus-test/r/c_using_mitigat_API",draft:!1,tags:[],version:"current",frontMatter:{title:"Mitigation and Comments XML API",slug:"/r/c_using_mitigat_API"},sidebar:"tutorialSidebar",previous:{title:"getmaintenancescheduleinfo.do (Deprecated)",permalink:"/km-docusaurus-test/r/r_getmaintenancescheduleinfo"},next:{title:"Mitigation and Comments XML APIs Quick Reference",permalink:"/km-docusaurus-test/r/c_mitigate_calls"}},c={},l=[{value:"REST API Equivalent",id:"rest-api-equivalent",level:2},{value:"Prerequisites",id:"prerequisites",level:2}],u={toc:l};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The Mitigation and Comments API enables you to integrate comments on findings and mitigation workflow tasks into IDEs and bug tracking systems."),(0,i.kt)("p",null,"You can mitigate a finding, accept or reject a mitigation action, or comment on a proposed mitigation. In addition, you can view all comments and mitigation actions any user has performed on a finding."),(0,i.kt)("p",null,"To learn about how to use the Mitigation and Comments API, see the ",(0,i.kt)("a",{parentName:"p",href:"/km-docusaurus-test/r/c_TUTOR_mitigate"},"tutorial"),"."),(0,i.kt)("h2",{id:"rest-api-equivalent"},"REST API Equivalent"),(0,i.kt)("p",null,"The REST API equivalents of these calls are available with the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_rest_annotations_intro"},"Annotations API")," and the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.veracode.com/r/c_findings_v2_intro"},"Findings API"),". Veracode strongly recommends that you use the REST APIs. For new integrations, always use the REST APIs."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_about_veracode_accounts"},"API service account")," with the Mitigation API role or a ",(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_about_veracode_accounts"},"user account")," with one of these roles:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Reviewer or Security Lead: to view all actions performed on a finding, to submit proposed mitigations, or to comment on proposed mitigations."),(0,i.kt)("li",{parentName:"ul"},"Mitigation Approver and either Reviewer or Security Lead: to accept or reject proposed mitigations."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/c_api_credentials3"},"Veracode API credentials"),"."),(0,i.kt)("li",{parentName:"ul"},"Ensure you access the APIs with the ",(0,i.kt)("a",{parentName:"li",href:"https://docs.veracode.com/r/Region_Domains_for_Veracode_APIs"},"domain for your region"),".")))}m.isMDXComponent=!0}}]);